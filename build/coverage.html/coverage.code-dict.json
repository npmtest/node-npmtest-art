{"/home/travis/build/npmtest/node-npmtest-art/test.js":"/* istanbul instrument in package npmtest_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-art/lib.npmtest_art.js":"/* istanbul instrument in package npmtest_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_art = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_art = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-art/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-art && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_art */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_art\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_art.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_art.rollup.js'] =\n            local.assetsDict['/assets.npmtest_art.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_art.__dirname + '/lib.npmtest_art.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/index.js":"var MODE = require('./modes/current');\nMODE.Rectangle = require('./shapes/rectangle');\nMODE.Pill = require('./shapes/pill');\nMODE.Ellipse = require('./shapes/ellipse');\nMODE.Wedge = require('./shapes/wedge');\nif (!MODE.Font) MODE.Font = require('./shapes/font');\nMODE.Transform = require('./core/transform');\nMODE.Color = require('./core/color');\nmodule.exports = MODE;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/current.js":"function warning(){\n\tthrow new Error('You must require a mode before requiring anything else.');\n}\n\nexports.Surface = warning;\nexports.Path = warning;\nexports.Shape = warning;\nexports.Group = warning;\nexports.ClippingRectangle = warning;\nexports.Text = warning;\n\nexports.setCurrent = function(mode){\n\tfor (var key in mode){\n\t\texports[key] = mode[key];\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/rectangle.js":"var Shape = require('./generic');\n\nmodule.exports = Shape(function(width, height, radius){\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tvar path = this.path;\n\n\tif (!radius){\n\n\t\tpath.move(0, 0).line(width, 0).line(0, height).line(-width, 0).line(0, -height);\n\n\t} else {\n\n\t\tif (typeof radius == 'number') radius = [radius, radius, radius, radius];\n\n\t\tvar tl = radius[0], tr = radius[1], br = radius[2], bl = radius[3];\n\n\t\tif (tl < 0) tl = 0;\n\t\tif (tr < 0) tr = 0;\n\t\tif (bl < 0) bl = 0;\n\t\tif (br < 0) br = 0;\n\n\t\tpath.move(0, tl);\n\n\t\tif (width < 0) path.move(width, 0);\n\t\tif (height < 0) path.move(0, height);\n\n\t\tif (tl > 0) path.arc(tl, -tl);\n\t\tpath.line(Math.abs(width) - (tr + tl), 0);\n\n\t\tif (tr > 0) path.arc(tr, tr);\n\t\tpath.line(0, Math.abs(height) - (tr + br));\n\n\t\tif (br > 0) path.arc(-br, br);\n\t\tpath.line(- Math.abs(width) + (br + bl), 0);\n\n\t\tif (bl > 0) path.arc(-bl, -bl);\n\t\tpath.line(0, - Math.abs(height) + (bl + tl));\n\t}\n\t\n\tpath.close();\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/generic.js":"var Class = require('../core/class');\nvar Mode = require('../modes/current');\n\nmodule.exports = function(drawFunction){\n\n\treturn Class(Mode.Shape, {\n\n\t\tshape_initialize: Mode.Shape.prototype.initialize,\n\t\tshape_draw: Mode.Shape.prototype.draw,\n\n\t\tinitialize: function(arg){\n\t\t\tthis.shape_initialize();\n\t\t\tthis.path = new Mode.Path();\n\t\t\tif (arg != null) this.draw.apply(this, arguments);\n\t\t},\n\n\t\tdraw: function(){\n\t\t\tthis.path.reset();\n\t\t\tthis._draw_function.apply(this, arguments);\n\t\t\tthis.shape_draw(this.path, this.width, this.height);\n\t\t\treturn this;\n\t\t},\n\n\t\t_draw_function: drawFunction\n\n\t});\n\n};","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/core/class.js":"module.exports = function(mixins){\n\tvar proto = {};\n\tfor (var i = 0, l = arguments.length; i < l; i++){\n\t\tvar mixin = arguments[i];\n\t\tif (typeof mixin == 'function') mixin = mixin.prototype;\n\t\tfor (var key in mixin) proto[key] = mixin[key];\n\t}\n\tif (!proto.initialize) proto.initialize = function(){};\n\tproto.constructor = function(a,b,c,d,e,f,g,h){\n\t\treturn new proto.initialize(a,b,c,d,e,f,g,h);\n\t};\n\tproto.constructor.prototype = proto.initialize.prototype = proto;\n\treturn proto.constructor;\n};\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/pill.js":"var Shape = require('./generic');\n\nmodule.exports = Shape(function(width, height){\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tvar path = this.path;\n\n\tif (width < 0){\n\t\tpath.move(width, 0);\n\t\twidth = -width;\n\t}\n\tif (height < 0){\n\t\tpath.move(0, height);\n\t\theight = -height;\n\t}\n\n\tif (width < height){\n\t\tvar r = width / 2;\n\t\tpath.move(0, r)\n\t\t\t.arc(width, 0, r)\n\t\t\t.line(0, height - width)\n\t\t\t.arc(-width, 0, r)\n\t\t\t.line(0, width - height);\n\t} else {\n\t\tvar r = height / 2;\n\t\tpath.move(r, 0)\n\t\t\t.line(width - height, 0)\n\t\t\t.arc(0, height, r)\n\t\t\t.line(height - width, 0)\n\t\t\t.arc(0, -height, r);\n\t}\n\t\n\tpath.close();\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/ellipse.js":"var Shape = require('./generic');\n\nmodule.exports = Shape(function(width, height){\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tvar rx = width / 2, ry = height / 2;\n\n\tthis.path\n\t\t.move(0, ry)\n\t\t.arc(width, 0, rx, ry)\n\t\t.arc(-width, 0, rx, ry)\n\t\t.close();\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/wedge.js":"var Shape = require('./generic');\n\nmodule.exports = Shape(function(innerRadius, outerRadius, startAngle, endAngle){\n\n\tvar circle = Math.PI * 2,\n\t\tradiansPerDegree = Math.PI / 180,\n\t\tsa = startAngle * radiansPerDegree % circle || 0,\n\t\tea = endAngle * radiansPerDegree % circle || 0,\n\t\tir = Math.min(innerRadius || 0, outerRadius || 0),\n\t\tor = Math.max(innerRadius || 0, outerRadius || 0),\n\t\ta = sa > ea ? circle - sa + ea : ea - sa;\n\n\tthis.width = this.height = or * 2;\n\tvar path = this.path;\n\n\tif (a >= circle){\n\n\t\tpath.move(0, or).arc(or * 2, 0, or).arc(-or * 2, 0, or);\n\t\tif (ir) path.move(or - ir, 0).counterArc(ir * 2, 0, ir).counterArc(-ir * 2, 0, ir);\n\n\t} else {\n\n\t\tvar ss = Math.sin(sa), es = Math.sin(ea),\n\t\t\tsc = Math.cos(sa), ec = Math.cos(ea),\n\t\t\tds = es - ss, dc = ec - sc, dr = ir - or,\n\t\t\tlarge = a > Math.PI;\n\n\t\tpath.move(or + or * ss, or - or * sc).arc(or * ds, or * -dc, or, or, large).line(dr * es, dr * -ec);\n\t\tif (ir) path.counterArc(ir * -ds, ir * dc, ir, ir, large);\n\n\t}\n\n\tpath.close();\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/shapes/font.js":"var Shape = require('./generic');\n\nvar fonts = {};\n\nvar parseFontString = function(font){\n\tvar regexp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?)[ptexm\\%]*(?:\\s*\\/.*?)?\\s+)?\\s*\\\"?([^\\\"]*)/i,\n\t    match = regexp.exec(font);\n\treturn {\n\t\tfontFamily: match[3],\n\t\tfontSize: match[2],\n\t\tfontStyle: (/italic/.exec(match[1]) || ''),\n\t\tfontWeight: (/bold/.exec(match[1]) || '')\n\t};\n};\n\nvar Font = Shape(function(text, font, alignment){\n\tif (typeof font == 'string') font = parseFontString(font);\n\tif (font) this.font = font; else font = this.font;\n\t\n\tvar family = font.fontFamily || font['font-family'],\n\t\tweight = font.fontWeight || font['font-weight'] || 'normal',\n\t\tstyle = font.fontStyle || font['font-style'] || 'normal',\n\t\tsize = parseFloat(font.fontSize || font['font-size'] || font.size);\n\t\n\tfont = font.glyphs ? font : fonts[weight + style + family];\n\t\n\tif (!font) throw new Error('The specified font has not been found.');\n\t\n\tvar scale = size / font.face['units-per-em'];\n\tvar width = 0, height = size, path = '', row = '';\n\t\n\tvar x = 0, y = scale * font.face.ascent || size - (scale * font.face.descent);\n\n\tvar regexp = /([mclrvxe])([^a-z]*)/g, match;\n\t\n\t// TODO: Refactor to use SVG paths as the source\n\t\n\tvar cx = 0, cy = 0, fx = 0, fy = 0;\n\tfor (var i = 0, l = text.length; i < l; ++i){\n\t\tif (text.charAt(i) == '\\n'){\n\t\t\tif (alignment == 'end' || alignment == 'right'){\n\t\t\t\tcx -= x;\n\t\t\t\tpath += 'm' + (-x) + ',0';\n\t\t\t}\n\t\t\tif (alignment == 'middle' || alignment == 'center'){\n\t\t\t\tcx -= x / 2;\n\t\t\t\tpath += 'm' + (-x / 2) + ',0';\n\t\t\t}\n\t\t\tpath += row;\n\t\t\tpath += 'm' + (-cx) + ',' + (-cy);\n\t\t\tcx = cy = 0;\n\t\t\trow = '';\n\t\t\tx = 0;\n\t\t\ty += size * 1.1;\n\t\t\theight += size * 1.1;\n\t\t\tcontinue;\n\t\t}\n\t\tvar glyph = font.glyphs[text.charAt(i)] || font.glyphs.missing || font.glyphs[' '];\n\t\tif (!glyph) continue;\n\t\tvar w = scale * (glyph.w || font.w);\n\t\tif (glyph.d){\n\t\t\tvar s = scale;\n\t\t\t\n\t\t\tif (glyph.path){\n\t\t\t\tvar parts = glyph.path;\n\t\t\t} else {\n\t\t\t\tvar parts = [], index = -1,\n\t\t\t\t\tbits = ('m' + glyph.d + 'x').match(/[a-df-z]|[\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+/ig),\n\t\t\t\t\tpart;\n\n\t\t\t\tfor (var j = 0, k = bits.length; j < k; j++){\n\t\t\t\t\tvar bit = bits[j];\n\t\t\t\t\tif (bit.match(/^[a-z]/i)){\n\t\t\t\t\t\tparts[++index] = part = [bit];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpart.push(Number(bit));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tglyph.path = parts;\n\t\t\t}\n\n\t\t\tfor (var j = 0; j < parts.length; j++){\n\t\t\t\tvar c = Array.prototype.slice.call(parts[j]), f = c.shift();\n\t\t\t\tswitch (f){\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\trow += 'l ' + (x + (s * c[0]) - cx) + ',' + (y + (s * c[1]) - cy);\n\t\t\t\t\t\t//row += 'L ' + (x + (s * c[0])) + ',' + (y + (s * c[1]));\n\t\t\t\t\t\tcx = x + (s * c[0]); cy = y + (s * c[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\trow += 'c ' + (x + s * c[0] - cx) + ',' + (y + s * c[1] - cy) + ',' + (x + s * c[2] - cx) + ',' + (y + s * c[3] - cy) + ',' + (x + s * c[4] - cx) + ',' + (y + s * c[5] - cy);\n\t\t\t\t\t\tcx = x + (s * c[4]); cy = y + (s * c[5]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\trow += 'c ' + (s * c[0]) + ',' + (s * c[1]) + ',' + (s * c[2]) + ',' + (s * c[3]) + ',' + (s * c[4]) + ',' + (s * c[5]);\n\t\t\t\t\t\tcx += (s * c[4]); cy += (s * c[5]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\trow += 'l ' + (s * c[0]) + ',' + (s * c[1]);\n\t\t\t\t\t\tcx += (s * c[0]); cy += (s * c[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\trow += 'm ' + (x + (s * c[0]) - cx) + ',' + (y + (s * c[1]) - cy);\n\t\t\t\t\t\tfx = cx = x + (s * c[0]);\n\t\t\t\t\t\tfy = cy = y + (s * c[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'x':\n\t\t\t\t\t\trow += 'z';\n\t\t\t\t\t\tcx = fx;\n\t\t\t\t\t\tcy = fy;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx += w;\n\t\tif (x > width) width = x;\n\t}\n\t\n\tif (alignment == 'end' || alignment == 'right') path += 'm' + (-x) + ',0';\n\tif (alignment == 'middle' || alignment == 'center') path += 'm' + (-x / 2) + ',0';\n\tpath += row;\n\tthis.path.push(path);\n\tthis.width = width;\n\tthis.height = height;\n});\n\nFont.register = function(font){\n\tvar face = font.face,\n\t    family = face['font-family'],\n\t    weight = (face['font-weight'] > 500 ? 'bold' : 'normal'),\n\t    style = (face['font-stretch'] == 'oblique' || face['font-style'] == 'oblique' || face['font-style'] == 'italic' ? 'italic' : 'normal');\n\tfonts[weight + style + family] = font;\n\treturn this;\n};\n\nmodule.exports = Font;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/core/transform.js":"var Class = require('./class');\n\nfunction Transform(xx, yx, xy, yy, x, y){\n\tif (xx && typeof xx == 'object'){\n\t\tyx = xx.yx; yy = xx.yy; y = xx.y;\n\t\txy = xx.xy; x = xx.x; xx = xx.xx;\n\t}\n\tthis.xx = xx == null ? 1 : xx;\n\tthis.yx = yx || 0;\n\tthis.xy = xy || 0;\n\tthis.yy = yy == null ? 1 : yy;\n\tthis.x = (x == null ? this.x : x) || 0;\n\tthis.y = (y == null ? this.y : y) || 0;\n\tthis._transform();\n\treturn this;\n};\n\nmodule.exports = Class({\n\n\tinitialize: Transform,\n\n\t_transform: function(){},\n\n\txx: 1, yx: 0, x: 0,\n\txy: 0, yy: 1, y: 0,\n\n\ttransform: function(xx, yx, xy, yy, x, y){\n\t\tvar m = this;\n\t\tif (xx && typeof xx == 'object'){\n\t\t\tyx = xx.yx; yy = xx.yy; y = xx.y;\n\t\t\txy = xx.xy; x = xx.x; xx = xx.xx;\n\t\t}\n\t\tif (!x) x = 0;\n\t\tif (!y) y = 0;\n\t\treturn this.transformTo(\n\t\t\tm.xx * xx + m.xy * yx,\n\t\t\tm.yx * xx + m.yy * yx,\n\t\t\tm.xx * xy + m.xy * yy,\n\t\t\tm.yx * xy + m.yy * yy,\n\t\t\tm.xx * x + m.xy * y + m.x,\n\t\t\tm.yx * x + m.yy * y + m.y\n\t\t);\n\t},\n\n\ttransformTo: Transform,\n\n\ttranslate: function(x, y){\n\t\treturn this.transform(1, 0, 0, 1, x, y);\n\t},\n\n\tmove: function(x, y){\n\t\tthis.x += x || 0;\n\t\tthis.y += y || 0;\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\tscale: function(x, y){\n\t\tif (y == null) y = x;\n\t\treturn this.transform(x, 0, 0, y, 0, 0);\n\t},\n\n\trotate: function(deg, x, y){\n\t\tif (x == null || y == null){\n\t\t\tx = (this.left || 0) + (this.width || 0) / 2;\n\t\t\ty = (this.top || 0) + (this.height || 0) / 2;\n\t\t}\n\n\t\tvar rad = deg * Math.PI / 180, sin = Math.sin(rad), cos = Math.cos(rad);\n\n\t\tthis.transform(1, 0, 0, 1, x, y);\n\t\tvar m = this;\n\n\t\treturn this.transformTo(\n\t\t\tcos * m.xx - sin * m.yx,\n\t\t\tsin * m.xx + cos * m.yx,\n\t\t\tcos * m.xy - sin * m.yy,\n\t\t\tsin * m.xy + cos * m.yy,\n\t\t\tm.x,\n\t\t\tm.y\n\t\t).transform(1, 0, 0, 1, -x, -y);\n\t},\n\n\tmoveTo: function(x, y){\n\t\tvar m = this;\n\t\treturn this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);\n\t},\n\n\trotateTo: function(deg, x, y){\n\t\tvar m = this;\n\t\tvar flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;\n\t\tif (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;\n\t\treturn this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);\n\t},\n\n\tscaleTo: function(x, y){\n\t\t// Normalize\n\t\tvar m = this;\n\n\t\tvar h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);\n\t\tm.xx /= h; m.yx /= h;\n\n\t\th = Math.sqrt(m.yy * m.yy + m.xy * m.xy);\n\t\tm.yy /= h; m.xy /= h;\n\n\t\treturn this.scale(x, y);\n\t},\n\n\tresizeTo: function(width, height){\n\t\tvar w = this.width, h = this.height;\n\t\tif (!w || !h) return this;\n\t\treturn this.scaleTo(width / w, height / h);\n\t},\n\n\t/*\n\tinverse: function(){\n\t\tvar a = this.xx, b = this.yx,\n\t\t\tc = this.xy, d = this.yy,\n\t\t\te = this.x, f = this.y;\n\t\tif (a * d - b * c == 0) return null;\n\t\treturn new Transform(\n\t\t\td/(a * d-b * c), b/(b * c-a * d),\n\t\t\tc/(b * c-a * d), a/(a * d-b * c),\n\t\t\t(d * e-c * f)/(b * c-a * d), (b * e-a * f)/(a * d-b * c)\n\t\t);\n\t},\n\t*/\n\n\tinversePoint: function(x, y){\n\t\tvar a = this.xx, b = this.yx,\n\t\t\tc = this.xy, d = this.yy,\n\t\t\te = this.x, f = this.y;\n\t\tvar det = b * c - a * d;\n\t\tif (det == 0) return null;\n\t\treturn {\n\t\t\tx: (d * (e - x) + c * (y - f)) / det,\n\t\t\ty: (a * (f - y) + b * (x - e)) / det\n\t\t};\n\t},\n\n\tpoint: function(x, y){\n\t\tvar m = this;\n\t\treturn {\n\t\t\tx: m.xx * x + m.xy * y + m.x,\n\t\t\ty: m.yx * x + m.yy * y + m.y\n\t\t};\n\t}\t\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/core/color.js":"var colors = {\n\tmaroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',\n\tpurple: '#800080', fuchsia: \"#ff00ff\", white: '#ffffff', lime: '#00ff00', green: '#008000',\n\tnavy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',\n\tblack: '#000000', silver: '#c0c0c0', gray: '#808080'\n};\n\nvar map = function(array, fn){\n\tvar results = [];\n\tfor (var i = 0, l = array.length; i < l; i++)\n\t\tresults[i] = fn(array[i], i);\n\treturn results;\n};\n\nvar Color = function(color, type){\n\t\n\tif (color.isColor){\n\t\t\n\t\tthis.red = color.red;\n\t\tthis.green = color.green;\n\t\tthis.blue = color.blue;\n\t\tthis.alpha = color.alpha;\n\n\t} else {\n\t\t\n\t\tvar namedColor = colors[color];\n\t\tif (namedColor){\n\t\t\tcolor = namedColor;\n\t\t\ttype = 'hex';\n\t\t}\n\n\t\tswitch (typeof color){\n\t\t\tcase 'string': if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex'; break;\n\t\t\tcase 'object': type = type || 'rgb'; color = color.toString(); break;\n\t\t\tcase 'number': type = 'hex'; color = color.toString(16); break;\n\t\t}\n\n\t\tcolor = Color['parse' + type.toUpperCase()](color);\n\t\tthis.red = color[0];\n\t\tthis.green = color[1];\n\t\tthis.blue = color[2];\n\t\tthis.alpha = color[3];\n\t}\n\t\n\tthis.isColor = true;\n\n};\n\nvar limit = function(number, min, max){\n\treturn Math.min(max, Math.max(min, number));\n};\n\nvar listMatch = /([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,\\s*([-.\\d]+\\%?)\\s*,?\\s*([-.\\d]*\\%?)/;\nvar hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;\n\nColor.parseRGB = function(color){\n\treturn map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);\n\t\treturn (i < 3) ? Math.round(((bit %= 256) < 0) ? bit + 256 : bit) : limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n};\n\t\nColor.parseHEX = function(color){\n\tif (color.length == 1) color = color + color + color;\n\treturn map(color.match(hexMatch).slice(1), function(bit, i){\n\t\tif (i == 3) return (bit) ? parseInt(bit, 16) / 255 : 1;\n\t\treturn parseInt((bit.length == 1) ? bit + bit : bit, 16);\n\t});\n};\n\t\nColor.parseHSB = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\t\n\tvar a = hsb[3];\n\tvar br = Math.round(hsb[2] / 100 * 255);\n\tif (hsb[1] == 0) return [br, br, br, a];\n\t\t\n\tvar hue = hsb[0];\n\tvar f = hue % 60;\n\tvar p = Math.round((hsb[2] * (100 - hsb[1])) / 10000 * 255);\n\tvar q = Math.round((hsb[2] * (6000 - hsb[1] * f)) / 600000 * 255);\n\tvar t = Math.round((hsb[2] * (6000 - hsb[1] * (60 - f))) / 600000 * 255);\n\n\tswitch (Math.floor(hue / 60)){\n\t\tcase 0: return [br, t, p, a];\n\t\tcase 1: return [q, br, p, a];\n\t\tcase 2: return [p, br, t, a];\n\t\tcase 3: return [p, q, br, a];\n\t\tcase 4: return [t, p, br, a];\n\t\tdefault: return [br, p, q, a];\n\t}\n};\n\nColor.parseHSL = function(color){\n\tvar hsb = map(color.match(listMatch).slice(1), function(bit, i){\n\t\tif (bit) bit = parseFloat(bit);\n\t\tif (i === 0) return Math.round(((bit %= 360) < 0) ? (bit + 360) : bit);\n\t\telse if (i < 3) return limit(Math.round(bit), 0, 100);\n\t\telse return limit(((bit === '') ? 1 : Number(bit)), 0, 1);\n\t});\n\n\tvar h = hsb[0] / 60;\n\tvar s = hsb[1] / 100;\n\tvar l = hsb[2] / 100;\n\tvar a = hsb[3];\n\t\n\tvar c = (1 - Math.abs(2 * l - 1)) * s;\n\tvar x = c * (1 - Math.abs(h % 2 - 1));\n\tvar m = l - c / 2;\n\t\n\tvar p = Math.round((c + m) * 255);\n\tvar q = Math.round((x + m) * 255);\n\tvar t = Math.round((m) * 255);\n\n\tswitch (Math.floor(h)){\n\t\tcase 0: return [p, q, t, a];\n\t\tcase 1: return [q, p, t, a];\n\t\tcase 2: return [t, p, q, a];\n\t\tcase 3: return [t, q, p, a];\n\t\tcase 4: return [q, t, p, a];\n\t\tdefault: return [p, t, q, a];\n\t}\n};\n\nvar toString = function(type, array){\n\tif (array[3] != 1) type += 'a';\n\telse array.pop();\n\treturn type + '(' + array.join(', ') + ')';\n};\n\nColor.prototype = {\n\n\ttoHSB: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / max : 0, brightness = max / 255;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];\n\n\t\treturn (array) ? hsb : toString('hsb', hsb);\n\t},\n\n\ttoHSL: function(array){\n\t\tvar red = this.red, green = this.green, blue = this.blue, alpha = this.alpha;\n\n\t\tvar max = Math.max(red, green, blue), min = Math.min(red, green, blue), delta = max - min;\n\t\tvar hue = 0, saturation = (delta != 0) ? delta / (255 - Math.abs((max + min) - 255)) : 0, lightness = (max + min) / 512;\n\t\tif (saturation){\n\t\t\tvar rr = (max - red) / delta, gr = (max - green) / delta, br = (max - blue) / delta;\n\t\t\thue = (red == max) ? br - gr : (green == max) ? 2 + rr - br : 4 + gr - rr;\n\t\t\tif ((hue /= 6) < 0) hue++;\n\t\t}\n\n\t\tvar hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];\n\n\t\treturn (array) ? hsl : toString('hsl', hsl);\n\t},\n\n\ttoHEX: function(array){\n\n\t\tvar a = this.alpha;\n\t\tvar alpha = ((a = Math.round((a * 255)).toString(16)).length == 1) ? a + a : a;\n\t\t\n\t\tvar hex = map([this.red, this.green, this.blue], function(bit){\n\t\t\tbit = bit.toString(16);\n\t\t\treturn (bit.length == 1) ? '0' + bit : bit;\n\t\t});\n\t\t\n\t\treturn (array) ? hex.concat(alpha) : '#' + hex.join('') + ((alpha == 'ff') ? '' : alpha);\n\t},\n\t\n\ttoRGB: function(array){\n\t\tvar rgb = [this.red, this.green, this.blue, this.alpha];\n\t\treturn (array) ? rgb : toString('rgb', rgb);\n\t}\n\n};\n\nColor.prototype.toString = Color.prototype.toRGB;\n\nColor.hex = function(hex){\n\treturn new Color(hex, 'hex');\n};\n\nif (this.hex == null) this.hex = Color.hex;\n\nColor.hsb = function(h, s, b, a){\n\treturn new Color([h || 0, s || 0, b || 0, (a == null) ? 1 : a], 'hsb');\n};\n\nif (this.hsb == null) this.hsb = Color.hsb;\n\nColor.hsl = function(h, s, l, a){\n\treturn new Color([h || 0, s || 0, l || 0, (a == null) ? 1 : a], 'hsl');\n};\n\nif (this.hsl == null) this.hsl = Color.hsl;\n\nColor.rgb = function(r, g, b, a){\n\treturn new Color([r || 0, g || 0, b || 0, (a == null) ? 1 : a], 'rgb');\n};\n\nif (this.rgb == null) this.rgb = Color.rgb;\n\nColor.detach = function(color){\n\tcolor = new Color(color);\n\treturn [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];\n};\n\nmodule.exports = Color;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/core/path.js":"var Class = require('./class');\n\nmodule.exports = Class({\n\t\n\tinitialize: function(path){\n\t\tthis.reset().push(path);\n\t},\n\n\t/* parser */\n\t\n\tpush: function(){\n\t\tvar p = Array.prototype.join.call(arguments, ' ')\n\t\t\t.match(/[a-df-z]|[\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+/ig);\n\t\tif (!p) return this;\n\n\t\tvar last, cmd = p[0], i = 1;\n\t\twhile (cmd){\n\t\t\tswitch (cmd){\n\t\t\t\tcase 'm': this.move(p[i++], p[i++]); break;\n\t\t\t\tcase 'l': this.line(p[i++], p[i++]); break;\n\t\t\t\tcase 'c': this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 's': this.curve(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'q': this.curve(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 't': this.curve(p[i++], p[i++]); break;\n\t\t\t\tcase 'a': this.arc(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'h': this.line(p[i++], 0); break;\n\t\t\t\tcase 'v': this.line(0, p[i++]); break;\n\n\t\t\t\tcase 'M': this.moveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'L': this.lineTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'C': this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'S': this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]); break;\n\t\t\t\tcase 'Q': this.curveTo(p[i++], p[i++], p[i++], p[i++]); break;\n\t\t\t\tcase 'T': this.curveTo(p[i++], p[i++]); break;\n\t\t\t\tcase 'A': this.arcTo(p[i+5], p[i+6], p[i], p[i+1], p[i+3], !+p[i+4], p[i+2]); i += 7; break;\n\t\t\t\tcase 'H': this.lineTo(p[i++], this.penY); break;\n\t\t\t\tcase 'V': this.lineTo(this.penX, p[i++]); break;\n\t\t\t\t\n\t\t\t\tcase 'Z': case 'z': this.close(); break;\n\t\t\t\tdefault: cmd = last; i--; continue;\n\t\t\t}\n\n\t\t\tlast = cmd;\n\t\t\tif (last == 'm') last = 'l';\n\t\t\telse if (last == 'M') last = 'L';\n\t\t\tcmd = p[i++];\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* utility methods */\n\n\treset: function(){\n\t\tthis.penX = this.penY = 0;\n\t\tthis.penDownX = this.penDownY = null;\n\t\tthis._pivotX = this._pivotY = 0;\n\t\tthis.onReset();\n\t\treturn this;\n\t},\n\t\n\tmove: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX += (+x), this._pivotY = this.penY += (+y));\n\t\treturn this;\n\t},\n\tmoveTo: function(x,y){\n\t\tthis.onMove(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\n\tline: function(x,y){\n\t\treturn this.lineTo(this.penX + (+x), this.penY + (+y));\n\t},\n\tlineTo: function(x,y){\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onLine(this.penX, this.penY, this._pivotX = this.penX = (+x), this._pivotY = this.penY = (+y));\n\t\treturn this;\n\t},\n\t\n\tcurve: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\treturn this.curveTo(\n\t\t\tx + (+c1x), y + (+c1y),\n\t\t\tc2x == null ? null : x + (+c2x),\n\t\t\tc2y == null ? null : y + (+c2y),\n\t\t\tex == null ? null : x + (+ex),\n\t\t\tey == null ? null : y + (+ey)\n\t\t);\n\t},\n\tcurveTo: function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar x = this.penX, y = this.penY;\n\t\tif (c2x == null){\n\t\t\tc2x = +c1x; c2y = +c1y;\n\t\t\tc1x = (x * 2) - (this._pivotX || 0); c1y = (y * 2) - (this._pivotY || 0);\n\t\t}\n\t\tif (ex == null){\n\t\t\tthis._pivotX = +c1x; this._pivotY = +c1y;\n\t\t\tex = +c2x; ey = +c2y;\n\t\t\tc2x = (ex + (+c1x) * 2) / 3; c2y = (ey + (+c1y) * 2) / 3;\n\t\t\tc1x = (x + (+c1x) * 2) / 3; c1y = (y + (+c1y) * 2) / 3;\n\t\t} else {\n\t\t\tthis._pivotX = +c2x; this._pivotY = +c2y;\n\t\t}\n\t\tif (this.penDownX == null){ this.penDownX = x; this.penDownY = y; }\n\t\tthis.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);\n\t\treturn this;\n\t},\n\t\n\tarc: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\treturn this.arcTo(this.penX + (+x), this.penY + (+y), rx, ry, outer, counterClockwise, rotation);\n\t},\n\tarcTo: function(x, y, rx, ry, outer, counterClockwise, rotation){\n\t\try = Math.abs(+ry || +rx || (+y - this.penY));\n\t\trx = Math.abs(+rx || (+x - this.penX));\n\n\t\tif (!rx || !ry || (x == this.penX && y == this.penY)) return this.lineTo(x, y);\n\n\t\tvar tX = this.penX, tY = this.penY, clockwise = !+counterClockwise, large = !!+outer;\n\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad);\n\t\tx -= tX; y -= tY;\n\t\t\n\t\t// Ellipse Center\n\t\tvar cx = cos * x / 2 + sin * y / 2,\n\t\t\tcy = -sin * x / 2 + cos * y / 2,\n\t\t\trxry = rx * rx * ry * ry,\n\t\t\trycx = ry * ry * cx * cx,\n\t\t\trxcy = rx * rx * cy * cy,\n\t\t\ta = rxry - rxcy - rycx;\n\n\t\tif (a < 0){\n\t\t\ta = Math.sqrt(1 - a / rxry);\n\t\t\trx *= a; ry *= a;\n\t\t\tcx = x / 2; cy = y / 2;\n\t\t} else {\n\t\t\ta = Math.sqrt(a / (rxcy + rycx));\n\t\t\tif (large == clockwise) a = -a;\n\t\t\tvar cxd = -a * cy * rx / ry,\n\t\t\t    cyd =  a * cx * ry / rx;\n\t\t\tcx = cos * cxd - sin * cyd + x / 2;\n\t\t\tcy = sin * cxd + cos * cyd + y / 2;\n\t\t}\n\n\t\t// Rotation + Scale Transform\n\t\tvar xx =  cos / rx, yx = sin / rx,\n\t\t    xy = -sin / ry, yy = cos / ry;\n\n\t\t// Start and End Angle\n\t\tvar sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),\n\t\t    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));\n\n\t\tcx += tX; cy += tY;\n\t\tx += tX; y += tY;\n\n\t\t// Circular Arc\n\t\tif (this.penDownX == null){ this.penDownX = this.penX; this.penDownY = this.penY; }\n\t\tthis.onArc(\n\t\t\ttX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y,\n\t\t\tcx, cy, rx, ry, sa, ea, !clockwise, rotation\n\t\t);\n\t\treturn this;\n\t},\n\n\tcounterArc: function(x, y, rx, ry, outer){\n\t\treturn this.arc(x, y, rx, ry, outer, true);\n\t},\n\tcounterArcTo: function(x, y, rx, ry, outer){\n\t\treturn this.arcTo(x, y, rx, ry, outer, true);\n\t},\n\n\tclose: function(){\n\t\tif (this.penDownX != null){\n\t\t\tthis.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);\n\t\t\tthis.penDownX = null;\n\t\t}\n\t\treturn this;\n\t},\n\n\t/* overridable handlers */\n\t\n\tonReset: function(){\n\t},\n\n\tonMove: function(sx, sy, ex, ey){\n\t},\n\n\tonLine: function(sx, sy, ex, ey){\n\t\tthis.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);\n\t},\n\n\tonBezierCurve: function(sx, sy, c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar gx = ex - sx, gy = ey - sy,\n\t\t\tg = gx * gx + gy * gy,\n\t\t\tv1, v2, cx, cy, u;\n\n\t\tcx = c1x - sx; cy = c1y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv1 = cx * cx + cy * cy;\n\n\t\tcx = c2x - sx; cy = c2y - sy;\n\t\tu = cx * gx + cy * gy;\n\n\t\tif (u > g){\n\t\t\tcx -= gx;\n\t\t\tcy -= gy;\n\t\t} else if (u > 0 && g != 0){\n\t\t\tcx -= u/g * gx;\n\t\t\tcy -= u/g * gy;\n\t\t}\n\n\t\tv2 = cx * cx + cy * cy;\n\n\t\tif (v1 < 0.01 && v2 < 0.01){\n\t\t\tthis.onLine(sx, sy, ex, ey);\n\t\t\treturn;\n\t\t}\n\n\t\t// Avoid infinite recursion\n\t\tif (isNaN(v1) || isNaN(v2)){\n\t\t\tthrow new Error('Bad input');\n\t\t}\n\n\t\t// Split curve\n\t\tvar s1x =   (c1x + c2x) * 0.5,   s1y =   (c1y + c2y) * 0.5,\n\t\t    l1x =   (c1x + sx)  * 0.5,   l1y =   (c1y + sy)  * 0.5,\n\t\t    l2x =   (l1x + s1x) * 0.5,   l2y =   (l1y + s1y) * 0.5,\n\t\t    r2x =   (ex + c2x)  * 0.5,   r2y =   (ey + c2y)  * 0.5,\n\t\t    r1x =   (r2x + s1x) * 0.5,   r1y =   (r2y + s1y) * 0.5,\n\t\t    l2r1x = (l2x + r1x) * 0.5,   l2r1y = (l2y + r1y) * 0.5;\n\n\t\t// TODO: Manual stack if necessary. Currently recursive without tail optimization.\n\t\tthis.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);\n\t\tthis.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);\n\t},\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\t// Inverse Rotation + Scale Transform\n\t\tvar rad = rotation ? rotation * Math.PI / 180 : 0, cos = Math.cos(rad), sin = Math.sin(rad),\n\t\t\txx = cos * rx, yx = -sin * ry,\n\t\t    xy = sin * rx, yy =  cos * ry;\n\n\t\t// Bezier Curve Approximation\n\t\tvar arc = ea - sa;\n\t\tif (arc < 0 && !ccw) arc += Math.PI * 2;\n\t\telse if (arc > 0 && ccw) arc -= Math.PI * 2;\n\n\t\tvar n = Math.ceil(Math.abs(arc / (Math.PI / 2))),\n\t\t    step = arc / n,\n\t\t    k = (4 / 3) * Math.tan(step / 4);\n\n\t\tvar x = Math.cos(sa), y = Math.sin(sa);\n\n\t\tfor (var i = 0; i < n; i++){\n\t\t\tvar cp1x = x - k * y, cp1y = y + k * x;\n\n\t\t\tsa += step;\n\t\t\tx = Math.cos(sa); y = Math.sin(sa);\n\n\t\t\tvar cp2x = x + k * y, cp2y = y - k * x;\n\n\t\t\tthis.onBezierCurve(\n\t\t\t\tsx, sy,\n\t\t\t\tcx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y,\n\t\t\t\tcx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y,\n\t\t\t\t(sx = (cx + xx * x + yx * y)), (sy = (cy + xy * x + yy * y))\n\t\t\t);\n\t\t}\n\t},\n\n\tonClose: function(sx, sy, ex, ey){\n\t\tthis.onLine(sx, sy, ex, ey);\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/dom/container.js":"var Class = require('../core/class');\n\nmodule.exports = Class({\n\n\tgrab: function(){\n\t\tfor (var i = 0; i < arguments.length; i++) arguments[i].inject(this);\n\t\treturn this;\n\t},\n\n\tempty: function(){\n\t\tvar node;\n\t\twhile (node = this.firstChild) node.eject();\n\t\treturn this;\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/dom/dummy.js":"var Class = require('../core/class');\n\nmodule.exports = Class({\n\n\t// placement\n\n\t_resetPlacement: function(){\n\t\tvar container = this.parentNode;\n\t\tif (container){\n\t\t\tvar previous = this.previousSibling, next = this.nextSibling;\n\t\t\tif (previous){\n\t\t\t\tprevious.nextSibling = next;\n\t\t\t} else {\n\t\t\t\tcontainer.firstChild = next;\n\t\t\t}\n\t\t\tif (next){\n\t\t\t\tnext.previousSibling = previous;\n\t\t\t} else {\n\t\t\t\tcontainer.lastChild = this.previousSibling;\n\t\t\t}\n\t\t}\n\t\tthis.previousSibling = null;\n\t\tthis.nextSibling = null;\n\t\tthis.parentNode = null;\n\t\treturn this;\n\t},\n\n\tinject: function(container){\n\t\tthis._resetPlacement();\n\t\tvar last = container.lastChild;\n\t\tif (last){\n\t\t\tlast.nextSibling = this;\n\t\t\tthis.previousSibling = last;\n\t\t} else {\n\t\t\tcontainer.firstChild = this;\n\t\t}\n\t\tcontainer.lastChild = this;\n\t\tthis.parentNode = container;\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tthis._resetPlacement();\n\t\tvar container = sibling.parentNode;\n\t\tif (!container) return this;\n\t\tvar previous = sibling.previousSibling;\n\t\tif (previous){\n\t\t\tprevious.nextSibling = this;\n\t\t\tthis.previousSibling = previous;\n\t\t} else {\n\t\t\tcontainer.firstChild = this;\n\t\t}\n\t\tsibling.previousSibling = this;\n\t\tthis.nextSibling = sibling;\n\t\tthis.parentNode = container;\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tthis._resetPlacement();\n\t\tthis._place();\n\t\treturn this;\n\t},\n\n\t_place: function(){},\n\n\t// events\n\n\tdispatch: function(event){\n\t\tvar events = this._events,\n\t\t\tlisteners = events && events[event.type];\n\t\tif (listeners){\n\t\t\tlisteners = listeners.slice(0);\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++){\n\t\t\t\tvar fn = listeners[i], result;\n\t\t\t\tif (typeof fn == 'function')\n\t\t\t\t\tresult = fn.call(this, event);\n\t\t\t\telse\n\t\t\t\t\tresult = fn.handleEvent(event);\n\t\t\t\tif (result === false) event.preventDefault();\n\t\t\t}\n\t\t}\n\t\tif (this.parentNode && this.parentNode.dispatch){\n\t\t\tthis.parentNode.dispatch(event);\n\t\t}\n\t},\n\n\tsubscribe: function(type, fn, bind){\n\t\tif (typeof type != 'string'){ // listen type / fn with object\n\t\t\tvar subscriptions = [];\n\t\t\tfor (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\t\t\treturn function(){ // unsubscribe\n\t\t\t\tfor (var i = 0, l = subscriptions.length; i < l; i++)\n\t\t\t\t\tsubscriptions[i]();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t} else { // listen to one\n\t\t\tvar bound = typeof fn === 'function' ? fn.bind(bind || this) : fn,\n\t\t\t\tevents = this._events || (this._events = {}),\n\t\t\t\tlisteners = events[type] || (events[type] = []);\n\t\t\tlisteners.push(bound);\n\t\t\treturn function(){\n\t\t\t\t// unsubscribe\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++){\n\t\t\t\t\tif (listeners[i] === bound){\n\t\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/dom/native.js":"var Class = require('../core/class');\n\nfunction elementFrom(node){\n\tif (node.toElement) return node.toElement();\n\tif (node.getDOMNode) return node.getDOMNode();\n\tif (node.getNode) return node.getNode();\n\treturn node;\n}\n\nmodule.exports = Class({\n\n\t// conventions\n\n\ttoElement: function(){\n\t\treturn this.element;\n\t},\n\n\tgetDOMNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\tgetNode: function(){\n\t\treturn this.toElement();\n\t},\n\n\t// placement\n\n\tinject: function(container){\n\t\t(container.containerElement || elementFrom(container))\n\t\t\t.appendChild(this.element);\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tvar element = elementFrom(sibling);\n\t\telement.parentNode.insertBefore(this.element, element);\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tvar element = this.element, parent = element.parentNode;\n\t\tif (parent) parent.removeChild(element); // TODO: VML Nodes are dead after being ejected\n\t\treturn this;\n\t},\n\n\t// events\n\n\tsubscribe: function(type, fn, bind){\n\t\tif (typeof type != 'string'){ // listen type / fn with object\n\t\t\tvar subscriptions = [];\n\t\t\tfor (var t in type) subscriptions.push(this.subscribe(t, type[t]));\n\t\t\treturn function(){ // unsubscribe\n\t\t\t\tfor (var i = 0, l = subscriptions.length; i < l; i++)\n\t\t\t\t\tsubscriptions[i]();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t} else { // listen to one\n\t\t\tif (!bind) bind = this;\n\t\t\tvar bound;\n\t\t\tif (typeof fn === 'function'){\n\t\t\t\tbound = fn.bind ? fn.bind(bind)\n\t\t\t\t\t: function(){ return fn.apply(bind, arguments); };\n\t\t\t} else {\n\t\t\t\tbound = fn;\n\t\t\t}\n\t\t\tvar element = this.element;\n\t\t\tif (element.addEventListener){\n\t\t\t\telement.addEventListener(type, bound, false);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.removeEventListener(type, bound, false);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\telement.attachEvent('on' + type, bound);\n\t\t\t\treturn function(){ // unsubscribe\n\t\t\t\t\telement.detachEvent('on' + type, bound);\n\t\t\t\t\treturn this;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/dom/shadow.js":"var Class = require('../core/class');\nvar Dummy = require('./dummy');\nvar Native = require('./native');\n\nmodule.exports = Class(Dummy, Native, {\n\n\tdummy_inject: Dummy.prototype.inject,\n\tdummy_injectBefore: Dummy.prototype.injectBefore,\n\tdummy_eject: Dummy.prototype.eject,\n\tnative_inject: Native.prototype.inject,\n\tnative_injectBefore: Native.prototype.injectBefore,\n\tnative_eject: Native.prototype.eject,\n\n\tinject: function(container){\n\t\tthis.dummy_inject(container);\n\t\tthis.native_inject(container);\n\t\treturn this;\n\t},\n\n\tinjectBefore: function(sibling){\n\t\tthis.dummy_injectBefore(sibling);\n\t\tthis.native_injectBefore(sibling);\n\t\treturn this;\n\t},\n\n\teject: function(){\n\t\tthis.dummy_eject();\n\t\tthis.native_eject();\n\t\treturn this;\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/lib/Sheet.Cascade.js":"var Slick = require('./slick/Source/slick').Slick;\r\nvar CSS = require('./sheet.js/Source/SheetParser.CSS').SheetParser.CSS;\r\n\r\nfunction calculateSpecificity(expression){\r\n\tvar specificity = 0;\r\n\tfor (var i = 0, l = expression.length; i < l; i++){\r\n\t\tvar part = expression[i];\r\n\t\tif (part.id) specificity += 10000;\r\n\t\tif (part.classes) specificity += part.classes.length * 1000;\r\n\t\tif (part.pseudos) specificity += part.pseudos.length * 1000;\r\n\t\tif (part.attributes) specificity += part.attributes.length * 1000;\r\n\t\tif (part.tag && part.tag != '*') specificity += 100;\r\n\t}\r\n\treturn specificity;\r\n};\r\n\r\nfunction sortRules(rules){\r\n\trules.sort(function(a,b){\r\n\t\tif (a.specificity < b.specificity)\r\n\t\t\treturn -1;\r\n\t\telse if (a.specificity > b.specificity)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t});\r\n};\r\n\r\nfunction nodeContent(node){\r\n\tvar n = node.firstChild, text = '';\r\n\twhile (n){\r\n\t\ttext += n.nodeValue;\r\n\t\tn = n.nextSibling;\r\n\t}\r\n\treturn text;\r\n}\r\n\r\nvar SheetCascade = function(){\r\n\tthis.rules = [];\r\n\tthis.cssRules = [];\r\n};\r\n\r\nSheetCascade.prototype = {\r\n\r\n\taddSheet: function(sheet){\r\n\t\tvar rules = sheet.cssRules || CSS.parse(sheet.innerHTML || nodeContent(sheet) || sheet);\r\n\t\tfor (var i = 0, l = rules.length; i < l; i++){\r\n\t\t\tvar rule = rules[i];\r\n\t\t\tthis.cssRules.push(rule);\r\n\t\t\tthis.addRule(rule.selectorText, rule.style);\r\n\t\t}\r\n\t},\r\n\t\r\n\taddRule: function(selector, style){\r\n\t\tvar parsed = Slick.parse(selector);\r\n\t\tif (!parsed) return;\r\n\t\tvar expressions = parsed.expressions;\r\n\t\tfor (var i = 0, l = expressions.length; i < l; i++){\r\n\t\t\tvar expression = expressions[i],\r\n\t\t\t    specificity = calculateSpecificity(expression) + this.rules.length;\r\n\t\t\tthis.rules.push({\r\n\t\t\t\tspecificity: specificity,\r\n\t\t\t\texpression: expression,\r\n\t\t\t\tstyle: style\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.sorted = false;\r\n\t},\r\n\r\n\tgetStyle: function(node){\r\n\t\tvar style = {};\r\n\t\tthis.applyStyle(node, style);\r\n\t\treturn style;\r\n\t},\r\n\r\n\tapplyStyle: function(node, targetStyle){\r\n\t\tvar rules = this.rules;\r\n\t\tif (!this.sorted){ sortRules(rules); this.sorted = true; }\r\n\t\t\r\n\t\tfor (var i = 0, l = rules.length; i < l; i++){\r\n\t\t\tvar rule = rules[i];\r\n\t\t\tif (Slick.match(node, { Slick: true, expressions: [rule.expression] })){\r\n\t\t\t\tvar ruleStyle = rule.style;\r\n\t\t\t\tfor (var name in ruleStyle) targetStyle[name] = ruleStyle[name];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar cssText = node.getAttribute('style');\r\n\t\tif (cssText){\r\n\t\t\tvar inlineStyle = CSS.parse(cssText);\r\n\t\t\tfor (var name in inlineStyle) targetStyle[name] = inlineStyle[name];\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nexports.SheetCascade = SheetCascade;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas.js":"exports.Surface = require('./canvas/surface');\nexports.Path = require('./canvas/path');\nexports.Shape = require('./canvas/shape');\nexports.Group = require('./canvas/group');\nexports.ClippingRectangle = require('./canvas/clippingrectangle');\nexports.Text = require('./canvas/text');\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/surface.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Element = require('../../dom/native');\n\nvar fps = 1000 / 60, invalids = [], renderTimer, renderInvalids = function(){\n\tclearTimeout(renderTimer);\n\trenderTimer = null;\n\tvar canvases = invalids;\n\tinvalids = [];\n\tfor (var i = 0, l = canvases.length; i < l; i++){\n\t\tvar c = canvases[i];\n\t\tc._valid = true;\n\t\tc.render();\n\t}\n};\n\nvar resolution = typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\nvar previousHit = null, previousHitSurface = null;\n\nvar CanvasSurface = Class(Element, Container, {\n\n\tinitialize: function(width, height, existingElement){\n\t\tvar element = this.element = existingElement || document.createElement('canvas');\n\t\tvar context = this.context = element.getContext('2d');\n\t\tthis._valid = true;\n\t\tif (width != null && height != null) this.resize(width, height);\n\n\t\telement.addEventListener('mousemove', this, false);\n\t\telement.addEventListener('mouseout', this, false);\n\t\telement.addEventListener('mouseover', this, false);\n\t\telement.addEventListener('mouseup', this, false);\n\t\telement.addEventListener('mousedown', this, false);\n\t\telement.addEventListener('click', this, false);\n\t},\n\n\thandleEvent: function(event){\n\t\tif (event.clientX == null) return;\n\t\tvar element = this.element,\n\t\t\trect = element.getBoundingClientRect(),\n\t\t\tx = event.clientX - rect.left - element.clientLeft,\n\t\t\ty = event.clientY - rect.top - element.clientTop,\n\t\t\thit = this.hitTest(x, y);\n\n\t\tif (hit !== previousHit){\n\t\t\tif (previousHit){\n\t\t\t\tpreviousHit.dispatch({\n\t\t\t\t\ttype: 'mouseout',\n\t\t\t\t\ttarget: previousHit,\n\t\t\t\t\trelatedTarget: hit,\n\t\t\t\t\tsourceEvent: event\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (hit){\n\t\t\t\thit.dispatch({\n\t\t\t\t\ttype: 'mouseover',\n\t\t\t\t\ttarget: hit,\n\t\t\t\t\trelatedTarget: previousHit,\n\t\t\t\t\tsourceEvent: event\n\t\t\t\t});\n\t\t\t}\n\t\t\tpreviousHit = hit;\n\t\t\tpreviousHitSurface = this;\n\t\t\tthis.refreshCursor();\n\t\t}\n\n\t\tif (hit) hit.dispatch(event);\n\t},\n\n\trefreshCursor: function(){\n\t\tif (previousHitSurface !== this) return;\n\t\tvar hit = previousHit, hitCursor = '', hitTooltip = '';\n\t\twhile (hit){\n\t\t\tif (!hitCursor && hit._cursor){\n\t\t\t\thitCursor = hit._cursor;\n\t\t\t\tif (hitTooltip) break;\n\t\t\t}\n\t\t\tif (!hitTooltip && hit._tooltip){\n\t\t\t\thitTooltip = hit._tooltip;\n\t\t\t\tif (hitCursor) break;\n\t\t\t}\n\t\t\thit = hit.parentNode;\n\t\t}\n\t\t// TODO: No way to set cursor/title on the surface\n\t\tthis.element.style.cursor = hitCursor;\n\t\tthis.element.title = hitTooltip;\n\t},\n\n\tresize: function(width, height){\n\t\tvar element = this.element;\n\t\telement.setAttribute('width', width * resolution);\n\t\telement.setAttribute('height', height * resolution);\n\t\telement.style.width = width + 'px';\n\t\telement.style.height = height + 'px';\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tinvalidate: function(left, top, width, height){\n\t\tif (this._valid){\n\t\t\tthis._valid = false;\n\t\t\tinvalids.push(this);\n\t\t\tif (!renderTimer){\n\t\t\t\tif (window.mozRequestAnimationFrame){\n\t\t\t\t\trenderTimer = true;\n\t\t\t\t\twindow.mozRequestAnimationFrame(renderInvalids);\n\t\t\t\t} else {\n\t\t\t\t\trenderTimer = setTimeout(renderInvalids, fps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\thitTest: function(x, y){\n\t\tif (x < 0 || y < 0 || x > this.width || y > this.height) return null;\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trender: function(){\n\t\tvar node = this.firstChild, context = this.context;\n\t\tcontext.setTransform(resolution, 0, 0, resolution, 0, 0);\n\t\tcontext.clearRect(0, 0, this.width, this.height);\n\t\twhile (node){\n\t\t\tnode.renderTo(context, resolution, 0, 0, resolution, 0, 0);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\tthis.refreshCursor();\n\t}\n\n});\n\nCanvasSurface.tagName = 'canvas';\n\nmodule.exports = CanvasSurface;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/path.js":"var Class = require('../../core/class');\nvar Path = require('../../core/path');\n\nvar CanvasPath = Class(Path, {\n\n\tinitialize: function(path){\n\t\tthis.reset();\n\t\tif (path instanceof CanvasPath){\n\t\t\tthis.path = path.path.slice(0);\n\t\t} else if (path){\n\t\t\tif (path.applyToPath)\n\t\t\t\tpath.applyToPath(this);\n\t\t\telse\n\t\t\t\tthis.push(path);\n\t\t}\n\t},\n\n\tonReset: function(){\n\t\tthis.path = [];\n\t},\n\n\tonMove: function(sx, sy, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.moveTo(x, y);\n\t\t});\n\t},\n\n\tonLine: function(sx, sy, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.lineTo(x, y);\n\t\t});\n\t},\n\n\tonBezierCurve: function(sx, sy, p1x, p1y, p2x, p2y, x, y){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.bezierCurveTo(p1x, p1y, p2x, p2y, x, y);\n\t\t});\n\t},\n\n\t_arcToBezier: Path.prototype.onArc,\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\tif (rx != ry || rotation) return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n\t\tthis.path.push(function(context){\n\t\t\tcontext.arc(cx, cy, rx, sa, ea, ccw);\n\t\t});\n\t},\n\n\tonClose: function(){\n\t\tthis.path.push(function(context){\n\t\t\tcontext.closePath();\n\t\t});\n\t},\n\n\ttoCommands: function(){\n\t\treturn this.path.slice(0);\n\t}\n\n});\n\nmodule.exports = CanvasPath;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/shape.js":"var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(path, width, height){\n\t\tthis.base_initialize();\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tif (path != null) this.draw(path);\n\t},\n\n\tdraw: function(path, width, height){\n\t\tif (!(path instanceof Path)) path = new Path(path);\n\t\tthis.path = path;\n\t\tthis._commands = path.toCommands();\n\t\tif (width != null) this.width = width;\n\t\tif (height != null) this.height = height;\n\t\treturn this.invalidate();\n\t},\n\n\tlocalHitTest: function(x, y){\n\t\tif (!this._fill) return null;\n\t\tif (this.width == null || this.height == null){\n\t\t\tvar context = Base._genericContext, commands = this._commands;\n\t\t\tif (!commands) return null;\n\t\t\tcontext.beginPath();\n\t\t\tfor (var i = 0, l = commands.length; i < l; i++)\n\t\t\t\tcommands[i](context);\n\t\t\treturn context.isPointInPath(x, y) ? this : null;\n\t\t}\n\t\tif (x > 0 && y > 0 && x < this.width && y < this.height){\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderShapeTo: function(context){\n\t\tif (this._invisible || !this._commands || (!this._fill && !this._stroke)) {\n\t\t\treturn null;\n\t\t}\n\t\tcontext.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n\t\tvar commands = this._commands,\n\t\t    fill = this._fill,\n\t\t    stroke = this._stroke,\n\t\t    dash = this._strokeDash;\n\n\t\tcontext.beginPath();\n\n\t\tif (dash) {\n\t\t\tif (context.setLineDash) {\n\t\t\t\tcontext.setLineDash(dash);\n\t\t\t} else {\n\t\t\t\t// TODO: Remove when FF supports setLineDash.\n\t\t\t\tcontext.mozDash = dash;\n\t\t\t}\n\t\t\t// TODO: Create fallback to other browsers.\n\t\t} else {\n\t\t\tif (context.setLineDash) {\n\t\t\t\tcontext.setLineDash([]);\n\t\t\t} else {\n\t\t\t\tcontext.mozDash = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = commands.length; i < l; i++)\n\t\t\tcommands[i](context);\n\n\t\tif (fill){\n\t\t\tvar m = this._fillTransform;\n\t\t\tif (m){\n\t\t\t\tcontext.save(); // TODO: Optimize away this by restoring the transform before stroking\n\t\t\t\tcontext.transform(m.xx, m.yx, m.xy, m.yy, m.x, m.y);\n\t\t\t\tcontext.fillStyle = fill;\n\t\t\t\tcontext.fill();\n\t\t\t\tcontext.restore();\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = fill;\n\t\t\t\tcontext.fill();\n\t\t\t}\n\t\t}\n\t\tif (stroke){\n\t\t\tcontext.strokeStyle = stroke;\n\t\t\tcontext.lineWidth = this._strokeWidth;\n\t\t\tcontext.lineCap = this._strokeCap;\n\t\t\tcontext.lineJoin = this._strokeJoin;\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/base.js":"var Class = require('../../core/class');\nvar Color = require('../../core/color');\nvar Transform = require('../../core/transform');\nvar Node = require('./node');\n\nvar genericCanvas = typeof document !== 'undefined' && document.createElement('canvas'),\n    genericContext = genericCanvas && genericCanvas.getContext && genericCanvas.getContext('2d');\n\nfunction recolorImage(img, color1, color2){\n\t// TODO: Fix this experimental implementation\n\tcolor1 = Color.detach(color1);\n\tcolor2 = Color.detach(color2);\n\tvar canvas = document.createElement('canvas'),\n\t\tcontext = canvas.getContext('2d');\n\tcanvas.width = img.width;\n\tcanvas.height = img.height;\n\tcontext.fillStyle = color2[0];\n\tcontext.fillRect(0, 0, img.width, img.height);\n\tcontext.globalCompositeOperation = 'lighter';\n\tcontext.drawImage(img, 0, 0);\n\treturn canvas;\n}\n\nvar Base = Class(Node, {\n\n\tinitialize: function(){\n\t\tthis._fill = null;\n\t\tthis._pendingFill = null;\n\t\tthis._fillTransform = null;\n\t\tthis._stroke = null;\n\t\tthis._strokeCap = null;\n\t\tthis._strokeDash = null;\n\t\tthis._strokeJoin = null;\n\t\tthis._strokeWidth = null;\n\t},\n\n\t/* styles */\n\n\t_addColors: function(gradient, stops){\n\t\t// Enumerate stops, assumes offsets are enumerated in order\n\t\t// TODO: Sort. Chrome doesn't always enumerate in expected order but requires stops to be specified in order.\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++)\n\t\t\tgradient.addColorStop(i / l, new Color(stops[i]).toString());\n\t\telse for (var offset in stops)\n\t\t\tgradient.addColorStop(offset, new Color(stops[offset]).toString());\n\t\treturn gradient;\n\t},\n\n\n\tfill: function(color){\n\t\tif (arguments.length > 1) return this.fillLinear(arguments);\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tthis._fill = color ? new Color(color).toString() : null;\n\t\treturn this.invalidate();\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tif (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n\t\tif (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5) || 0;\n\t\tif (radiusX == null) radiusX = (this.width || 0) * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\n\t\tif (radiusX === 0 || radiusX === '0') return this.fillLinear(stops);\n\t\tvar ys = radiusY / radiusX;\n\n\t\tif (this._pendingFill) this._pendingFill();\n\n\t\tvar gradient = genericContext.createRadialGradient(focusX, focusY / ys, 0, centerX, centerY / ys, radiusX * 2);\n\n\t\t// Double fill radius to simulate repeating gradient\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++){\n\t\t\tgradient.addColorStop(i / l / 2, new Color(stops[i]).toString());\n\t\t\tgradient.addColorStop(1 - i / l / 2, new Color(stops[i]).toString());\n\t\t} else for (var offset in stops){\n\t\t\tgradient.addColorStop(offset / 2, new Color(stops[offset]).toString());\n\t\t\tgradient.addColorStop(1- offset / 2, new Color(stops[offset]).toString());\n\t\t}\n\n\t\tthis._fill = gradient;\n\t\tthis._fillTransform = new Transform(1, 0, 0, ys);\n\t\treturn this.invalidate();\n\t},\n\n\tfillLinear: function(stops, x1, y1, x2, y2){\n\t\tif (arguments.length < 5){\n\t\t\tvar angle = ((x1 == null) ? 270 : x1) * Math.PI / 180;\n\n\t\t\tvar x = Math.cos(angle), y = -Math.sin(angle),\n\t\t\t\tl = (Math.abs(x) + Math.abs(y)) / 2,\n\t\t\t\tw = this.width || 1, h = this.height || 1;\n\n\t\t\tx *= l; y *= l;\n\n\t\t\tx1 = 0.5 - x;\n\t\t\tx2 = 0.5 + x;\n\t\t\ty1 = 0.5 - y;\n\t\t\ty2 = 0.5 + y;\n\t\t\tthis._fillTransform = new Transform(w, 0, 0, h);\n\t\t} else {\n\t\t\tthis._fillTransform = null;\n\t\t}\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tvar gradient = genericContext.createLinearGradient(x1, y1, x2, y2);\n\t\tthis._addColors(gradient, stops);\n\t\tthis._fill = gradient;\n\t\treturn this.invalidate();\n\t},\n\n\tfillImage: function(url, width, height, left, top, color1, color2){\n\t\tif (this._pendingFill) this._pendingFill();\n\t\tvar img = url;\n\t\tif (!(img instanceof Image)){\n\t\t\timg = new Image();\n\t\t\timg.src = url;\n\t\t}\n\t\tif (img.width && img.height){\n\t\t\treturn this._fillImage(img, width, height, left || 0, top || 0, color1, color2);\n\t\t}\n\n\t\t// Not yet loaded\n\t\tthis._fill = null;\n\t\tvar self = this,\n\t\t\tcallback = function(){\n\t\t\t\tcancel();\n\t\t\t\tself._fillImage(img, width, height, left || 0, top || 0, color1, color2);\n\t\t\t},\n\t\t\tcancel = function(){\n\t\t\t\timg.removeEventListener('load', callback, false);\n\t\t\t\tself._pendingFill = null;\n\t\t\t};\n\t\tthis._pendingFill = cancel;\n\t\timg.addEventListener('load', callback, false);\n\t\treturn this;\n\t},\n\n\t_fillImage: function(img, width, height, left, top, color1, color2){\n\t\tvar w = width ? width / img.width : 1,\n\t\t\th = height ? height / img.height : 1;\n\t\tif (color1 != null) img = recolorImage(img, color1, color2);\n\t\tthis._fill = genericContext.createPattern(img, 'repeat');\n\t\tthis._fillTransform = new Transform(w, 0, 0, h, left || 0, top || 0);\n\t\treturn this.invalidate();\n\t},\n\n\tstroke: function(color, width, cap, join, dash){\n\t\tthis._stroke = color ? new Color(color).toString() : null;\n\t\tthis._strokeWidth = (width != null) ? width : 1;\n\t\tthis._strokeCap = (cap != null) ? cap : 'round';\n\t\tthis._strokeJoin = (join != null) ? join : 'round';\n\t\tthis._strokeDash = dash;\n\t\treturn this.invalidate();\n\t},\n\n\t// Rendering\n\n\telement_renderTo: Node.prototype.renderTo,\n\n\trenderTo: function(context, xx, yx, xy, yy, x, y){\n\t\tvar opacity = this._opacity;\n\t\tif (opacity == null || opacity >= 1){\n\t\t\treturn this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\t\tif (this._fill && this._stroke){\n\t\t\treturn this.element_renderTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\t\tcontext.globalAlpha = opacity;\n\t\tvar r = this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\tcontext.globalAlpha = 1;\n\t\treturn r;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y){\n\t\tcontext.setTransform(xx, yx, xy, yy, x, y);\n\t\tthis.renderShapeTo(context);\n\t}\n\n});\n\nBase._genericContext = genericContext;\n\nmodule.exports = Base;\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/node.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Element = require('../../dom/dummy');\n\nvar CanvasNode = Class(Transform, Element, {\n\t\n\tinvalidate: function(){\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\tif (this._layer) this._layerCache = null;\n\t\treturn this;\n\t},\n\n\t_place: function(){\n\t\tthis.invalidate();\n\t},\n\t\n\t_transform: function(){\n\t\tthis.invalidate();\n\t},\n\t\n\tblend: function(opacity){\n\t\tif (opacity >= 1 && this._layer) this._layer = null;\n\t\tthis._opacity = opacity;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\t// visibility\n\t\n\thide: function(){\n\t\tthis._invisible = true;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\tshow: function(){\n\t\tthis._invisible = false;\n\t\tif (this.parentNode) this.parentNode.invalidate();\n\t\treturn this;\n\t},\n\t\n\t// interaction\n\t\n\tindicate: function(cursor, tooltip){\n\t\tthis._cursor = cursor;\n\t\tthis._tooltip = tooltip;\n\t\treturn this.invalidate();\n\t},\n\n\thitTest: function(x, y){\n\t\tif (this._invisible) return null;\n\t\tvar point = this.inversePoint(x, y);\n\t\tif (!point) return null;\n\t\treturn this.localHitTest(point.x, point.y);\n\t},\n\n\t// rendering\n\n\trenderTo: function(context, xx, yx, xy, yy, x, y){\n\t\tvar opacity = this._opacity;\n\t\tif (opacity == null || opacity >= 1){\n\t\t\treturn this.renderLayerTo(context, xx, yx, xy, yy, x, y);\n\t\t}\n\n\t\t// Render to a compositing layer and cache it\n\n\t\tvar layer = this._layer, canvas, isDirty = true,\n\t\t\tw = context.canvas.width, h = context.canvas.height;\n\t\tif (layer){\n\t\t\tlayer.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tcanvas = layer.canvas;\n\t\t\tif (canvas.width < w || canvas.height < h){\n\t\t\t\tcanvas.width = w;\n\t\t\t\tcanvas.height = h;\n\t\t\t} else {\n\t\t\t\tvar c = this._layerCache;\n\t\t\t\tif (c && c.xx === xx && c.yx === yx && c.xy === xy\n\t\t\t\t\t&& c.yy === yy && c.x === x && c.y === y){\n\t\t\t\t\tisDirty = false;\n\t\t\t\t} else {\n\t\t\t\t\tlayer.clearRect(0, 0, w, h);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tcanvas.width = w;\n\t\t\tcanvas.height = h;\n\t\t\tthis._layer = layer = canvas.getContext('2d');\n\t\t}\n\n\t\tif (isDirty){\n\t\t\tthis.renderLayerTo(layer, xx, yx, xy, yy, x, y);\n\t\t\tthis._layerCache = {\n\t\t\t\txx: xx,\n\t\t\t\tyx: yx,\n\t\t\t\txy: xy,\n\t\t\t\tyy: yy,\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\n\t\tcontext.globalAlpha = opacity;\n\t\tcontext.setTransform(1, 0, 0, 1, 0, 0);\n\t\tcontext.drawImage(\n\t\t\tcanvas,\n\t\t\t0, 0, w, h,\n\t\t\t0, 0, w, h\n\t\t);\n\t\tcontext.globalAlpha = 1;\n\t}\n\n});\n\nmodule.exports = CanvasNode;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/group.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\t\n\tinitialize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\tlocalHitTest: function(x, y){\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y){\n\t\tif (this._invisible) return;\n\n\t\tx = xx * this.x + xy * this.y + x;\n\t\ty = yx * this.x + yy * this.y + y;\n\n\t\tvar t = xx;\n\t\txx = t * this.xx + xy * this.yx;\n\t\txy = t * this.xy + xy * this.yy;\n\t\tt = yx;\n\t\tyx = t * this.xx + yy * this.yx;\n\t\tyy = t * this.xy + yy * this.yy;\n\n\t\tvar node = this.firstChild;\n\t\twhile (node){\n\t\t\tnode.renderTo(context, xx, yx, xy, yy, x, y);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/clippingrectangle.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\n\tinitialize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\tlocalHitTest: function(x, y) {\n\t\tvar node = this.lastChild;\n\t\twhile (node){\n\t\t\tvar hit = node.hitTest(x, y);\n\t\t\tif (hit) return hit;\n\t\t\tnode = node.previousSibling;\n\t\t}\n\t\treturn null;\n\t},\n\n\trenderLayerTo: function(context, xx, yx, xy, yy, x, y) {\n\t\tcontext.setTransform(xx, yx, xy, yy, x, y);\n\t\tcontext.save();\n\t\t// Need beginPath to fix Firefox bug. See 3354054.\n\t\tcontext.beginPath();\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t\tcontext.clip();\n\n\t\tvar node = this.firstChild;\n\t\twhile(node) {\n\t\t\tnode.renderTo(context, xx, yx, xy, yy, x, y);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\tcontext.restore();\n\t}\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/text.js":"var Class = require('../../core/class');\nvar Base = require('./base');\n\nvar fontAnchors = { middle: 'center' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize();\n\t\tthis.draw.apply(this, arguments);\n\t},\n\n\tdraw: function(text, font, alignment, path){\n\t\tvar em;\n\t\tif (typeof font == 'string'){\n\t\t\tem = Number(/(\\d+)/.exec(font)[0]);\n\t\t} else if (font){\n\t\t\tem = parseFloat(font.fontSize || font['font-size'] || '12');\n\t\t\tfont = (font.fontStyle || font['font-style'] || '') + ' ' +\n\t\t\t\t(font.fontVariant || font['font-variant'] || '') + ' ' +\n\t\t\t\t(font.fontWeight || font['font-weight'] || '') + ' ' +\n\t\t\t\tem + 'px ' +\n\t\t\t\t(font.fontFamily || font['font-family'] || 'Arial');\n\t\t} else {\n\t\t\tfont = this._font;\n\t\t}\n\n\t\tvar lines = text && text.split(/\\r?\\n/);\n\t\tthis._font = font;\n\t\tthis._fontSize = em;\n\t\tthis._text = lines;\n\t\tthis._alignment = fontAnchors[alignment] || alignment || 'left';\n\n\t\tvar context = Base._genericContext;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tlines = this._text;\n\t\tvar l = lines.length, width = 0;\n\t\tfor (var i = 0; i < l; i++){\n\t\t\tvar w = context.measureText(lines[i]).width;\n\t\t\tif (w > width) width = w;\n\t\t}\n\t\tthis.width = width;\n\t\tthis.height = l ? l * 1.1 * em : 0;\n\t\treturn this.invalidate();\n\t},\n\n\t// Interaction\n\n\tlocalHitTest: function(x, y){\n\t\tif (!this._fill) return null;\n\t\tif (x > 0 && y > 0 && x < this.width && y < this.height){\n\t\t\treturn this;\n\t\t}\n\t\treturn null;\n\t},\n\n\t// Rendering\n\n\trenderShapeTo: function(context){\n\t\tif (this._invisible || !this._text || (!this._fill && !this._stroke)) {\n\t\t\treturn null;\n\t\t}\n\t\tcontext.transform(this.xx, this.yx, this.xy, this.yy, this.x, this.y);\n\t\tvar fill = this._fill,\n\t\t    stroke = this._stroke,\n\t\t    text = this._text,\n\t\t    dash = this._strokeDash;\n\n\t\tcontext.font = this._font;\n\t\tcontext.textAlign = this._alignment;\n\t\tcontext.textBaseline = 'middle';\n\n\t\tvar em = this._fontSize,\n\t\t    y = em / 2,\n\t\t    lineHeight = 1.1 * em,\n\t\t    lines = text,\n\t\t    l = lines.length;\n\n\t\tif (fill){\n\t\t\tcontext.fillStyle = fill;\n\t\t\tfor (var i = 0; i < l; i++)\n\t\t\t\tcontext.fillText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t\tif (stroke){\n\t\t\tif (dash) {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(dash);\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Remove when FF supports setLineDash.\n\t\t\t\t\tcontext.mozDash = dash;\n\t\t\t\t}\n\t\t\t\t// TODO: Create fallback to other browsers.\n\t\t\t} else {\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash([]);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.mozDash = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontext.strokeStyle = stroke;\n\t\t\tcontext.lineWidth = this._strokeWidth;\n\t\t\tcontext.lineCap = this._strokeCap;\n\t\t\tcontext.lineJoin = this._strokeJoin;\n\t\t\tfor (i = 0; i < l; i++)\n\t\t\t\tcontext.strokeText(lines[i], 0, y + i * lineHeight);\n\t\t}\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/dom.js":"var SVG = require('./svg');\nvar VML = require('./vml');\n\nvar hasSVG = function(){\n\n\tvar implementation = typeof document !== 'undefined' && document.implementation;\n\treturn (implementation && implementation.hasFeature && implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\"));\n\n};\n\nvar hasVML = function(){\n\n\treturn typeof document !== 'undefined' && document.namespaces;\n\n};\n\nvar MODE = hasSVG() ? SVG : hasVML() ? VML : {};\n\nexports.Surface = MODE.Surface;\nexports.Path = MODE.Path;\nexports.Shape = MODE.Shape;\nexports.Group = MODE.Group;\nexports.ClippingRectangle = MODE.ClippingRectangle;\nexports.Text = MODE.Text;\n\nrequire('./current').setCurrent(exports);\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg.js":"exports.Surface = require('./svg/surface');\nexports.Path = require('./svg/path');\nexports.Shape = require('./svg/shape');\nexports.Group = require('./svg/group');\nexports.ClippingRectangle = require('./svg/group');\nexports.Text = require('./svg/text');\n\nrequire('./current').setCurrent(exports);\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/surface.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Element = require('../../dom/native');\nvar DOM = require('./dom');\n\nvar SVGSurface = Class(Element, Container, {\n\n\tinitialize: function SVGSurface(width, height, existingElement){\n\t\tvar element = this.element = existingElement || DOM.createElement('svg');\n\t\telement.setAttribute('xmlns', DOM.NS);\n\t\telement.setAttribute('version', 1.1);\n\t\tvar defs = this.defs = DOM.createElement('defs');\n\t\telement.appendChild(defs);\n\t\tif (width != null && height != null) this.resize(width, height);\n\t},\n\n\tresize: function(width, height){\n\t\tvar element = this.element;\n\t\telement.setAttribute('width', width);\n\t\telement.setAttribute('height', height);\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t}\n\n});\n\nSVGSurface.tagName = 'svg';\n\nmodule.exports = SVGSurface;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/dom.js":"var UID = +new Date();\n\nexports.uniqueID = function(){\n\treturn (UID++).toString(36);\n};\n\t\nvar NS = 'http://www.w3.org/2000/svg',\n\tXLINK = 'http://www.w3.org/1999/xlink',\n\tXML = 'http://www.w3.org/XML/1998/namespace';\n\nexports.NS = NS;\n\nexports.createElement = function(tag){\n    return document.createElementNS(NS, tag);\n};\n\nexports.link = function(element, url){\n\telement.setAttributeNS(XLINK, 'href', url);\n};\n\nexports.preserveSpace = function(element){\n\telement.setAttributeNS(XML, 'space', 'preserve');\n};\n\nexports.createTextNode = function(text){\n\treturn document.createTextNode(text);\n}","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/path.js":"var Class = require('../../core/class');\n\n// Utility command factories\n\nvar point = function(c){\n\treturn function(x, y){\n\t\treturn this.push(c, x, y);\n\t};\n};\n\nvar arc = function(c, cc){\n\treturn function(x, y, rx, ry, outer){\n\t\treturn this.push(c, Math.abs(rx || x), Math.abs(ry || rx || y), 0, outer ? 1 : 0, cc, x, y);\n\t};\n};\n\nvar curve = function(t, s, q, c){\n\treturn function(c1x, c1y, c2x, c2y, ex, ey){\n\t\tvar l = arguments.length, k = l < 4 ? t : l < 6 ? q : c;\n\t\treturn this.push(k, c1x, c1y, c2x, c2y, ex, ey);\n\t};\n};\n\n// SVG Path Class\n\nvar SVGPath = Class({\n\t\n\tinitialize: function(path){\n\t\tif (path instanceof SVGPath){\n\t\t\tthis.path = [Array.prototype.join.call(path.path, ' ')];\n\t\t} else {\n\t\t\tif (path && path.applyToPath)\n\t\t\t\tpath.applyToPath(this);\n\t\t\telse\n\t\t\t\tthis.path = [path || 'm0 0'];\n\t\t}\n\t},\n\t\n\tpush: function(){\n\t\tthis.path.push(Array.prototype.join.call(arguments, ' '));\n\t\treturn this;\n\t},\n\t\n\treset: function(){\n\t\tthis.path = [];\n\t\treturn this;\n\t},\n\t\n\tmove: point('m'),\n\tmoveTo: point('M'),\n\t\n\tline: point('l'),\n\tlineTo: point('L'),\n\t\n\tcurve: curve('t', 's', 'q', 'c'),\n\tcurveTo: curve('T', 'S', 'Q', 'C'),\n\t\n\tarc: arc('a', 1),\n\tarcTo: arc('A', 1),\n\t\n\tcounterArc: arc('a', 0),\n\tcounterArcTo: arc('A', 0),\n\t\n\tclose: function(){\n\t\treturn this.push('z');\n\t},\n\t\n\ttoSVG: function(){\n\t\treturn this.path.join(' ');\n\t}\n\n});\n\nSVGPath.prototype.toString = SVGPath.prototype.toSVG;\n\nmodule.exports = SVGPath;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/shape.js":"var Class = require('../../core/class');\nvar Path = require('./path');\nvar Base = require('./base');\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(path, width, height){\n\t\tthis.base_initialize('path');\n\t\tthis.element.setAttribute('fill-rule', 'evenodd');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tif (path != null) this.draw(path);\n\t},\n\n\tdraw: function(path, width, height){\n\t\tif (!(path instanceof Path)) path = new Path(path);\n\t\tthis.element.setAttribute('d', path.toSVG());\n\t\tif (width != null) this.width = width;\n\t\tif (height != null) this.height = height;\n\t\treturn this;\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/base.js":"var Class = require('../../core/class');\nvar Color = require('../../core/color');\nvar Node = require('./node');\nvar DOM = require('./dom');\nvar createElement = DOM.createElement;\n\nmodule.exports = Class(Node, {\n\n\telement_initialize: Node.prototype.initialize,\n\n\tinitialize: function(tag){\n\t\tthis.element_initialize(tag);\n\t\tthis.brushes = {};\n\t\tthis.fill();\n\t\tthis.stroke();\n\t},\n\n\t_place: function(){\n\t\tif (this.parentNode){\n\t\t\tthis._injectBrush('fill');\n\t\t\tthis._injectBrush('stroke');\n\t\t} else {\n\t\t\tthis._ejectBrush('fill');\n\t\t\tthis._ejectBrush('stroke');\n\t\t}\n\t\treturn this;\n\t},\n\n\t_injectBrush: function(type){\n\t\tif (!this.parentNode) return;\n\t\tvar brush = type == 'fill' ? this.fillBrush : this.strokeBrush;\n\t\tif (brush) this.parentNode.defs.appendChild(brush);\n\t},\n\n\t_ejectBrush: function(type){\n\t\tvar brush = this[type + 'Brush'];\n\t\tif (brush && brush.parentNode) brush.parentNode.removeChild(brush);\n\t},\n\n\t/* styles */\n\n\t_createBrush: function(type, tag){\n\t\tthis._ejectBrush(type);\n\n\t\tvar brush = createElement(tag);\n\t\tif (type == 'fill')\n\t\t\tthis.fillBrush = brush;\n\t\telse\n\t\t\tthis.strokeBrush = brush;\n\n\t\tvar id = type + '-brush-e' + DOM.uniqueID();\n\t\tbrush.setAttribute('id', id);\n\n\t\tthis._injectBrush(type);\n\n\t\tthis.element.setAttribute(type, 'url(#' + id + ')');\n\n\t\treturn brush;\n\t},\n\n\t_createGradient: function(type, style, stops){\n\t\tvar gradient = this._createBrush(type, style);\n\n\t\tvar addColor = function(offset, color){\n\t\t\tcolor = Color.detach(color);\n\t\t\tvar stop = createElement('stop');\n\t\t\tstop.setAttribute('offset', offset);\n\t\t\tstop.setAttribute('stop-color', color[0]);\n\t\t\tstop.setAttribute('stop-opacity', color[1]);\n\t\t\tgradient.appendChild(stop);\n\t\t};\n\n\t\t// Enumerate stops, assumes offsets are enumerated in order\n\t\t// TODO: Sort. Chrome doesn't always enumerate in expected order but requires stops to be specified in order.\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++) addColor(i / l, stops[i]);\n\t\telse for (var offset in stops) addColor(offset, stops[offset]);\n\n\t\tgradient.setAttribute('spreadMethod', 'reflect'); // Closer to the VML gradient\n\n\t\tthis.element.removeAttribute('fill-opacity');\n\t\treturn gradient;\n\t},\n\n\t_setColor: function(type, color){\n\t\tthis._ejectBrush(type);\n\t\tthis[type + 'Brush'] = null;\n\t\tvar element = this.element;\n\t\tif (color == null){\n\t\t\telement.setAttribute(type, 'none');\n\t\t\telement.removeAttribute(type + '-opacity');\n\t\t} else {\n\t\t\tcolor = Color.detach(color);\n\t\t\telement.setAttribute(type, color[0]);\n\t\t\telement.setAttribute(type + '-opacity', color[1]);\n\t\t}\n\t},\n\n\tfill: function(color){\n\t\tif (arguments.length > 1) this.fillLinear(arguments);\n\t\telse this._setColor('fill', color);\n\t\treturn this;\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tvar gradient = this._createGradient('fill', 'radialGradient', stops);\n\n\t\tgradient.setAttribute('gradientUnits', 'userSpaceOnUse');\n\n\n\t\tif (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n\t\tif (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5) || 0;\n\t\tif (radiusX == null) radiusX = (this.width || 0) * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\n\t\tvar ys = radiusY / radiusX;\n\n\t\tgradient.setAttribute('fx', focusX);\n\t\tgradient.setAttribute('fy', focusY / ys);\n\n\t\tgradient.setAttribute('r', radiusX);\n\t\tif (ys != 1) gradient.setAttribute('gradientTransform', 'scale(1,' + ys + ')');\n\n\t\tgradient.setAttribute('cx', centerX);\n\t\tgradient.setAttribute('cy', centerY / ys);\n\n\t\treturn this;\n\t},\n\n\tfillLinear: function(stops, x1, y1, x2, y2){\n\t\tvar gradient = this._createGradient('fill', 'linearGradient', stops);\n\n\t\tif (arguments.length == 5){\n\t\t\tgradient.setAttribute('gradientUnits', 'userSpaceOnUse');\n\t\t} else {\n\t\t\tvar angle = ((x1 == null) ? 270 : x1) * Math.PI / 180;\n\n\t\t\tvar x = Math.cos(angle), y = -Math.sin(angle),\n\t\t\t\tl = (Math.abs(x) + Math.abs(y)) / 2;\n\n\t\t\tx *= l; y *= l;\n\n\t\t\tx1 = 0.5 - x;\n\t\t\tx2 = 0.5 + x;\n\t\t\ty1 = 0.5 - y;\n\t\t\ty2 = 0.5 + y;\n\t\t}\n\n\t\tgradient.setAttribute('x1', x1);\n\t\tgradient.setAttribute('y1', y1);\n\t\tgradient.setAttribute('x2', x2);\n\t\tgradient.setAttribute('y2', y2);\n\n\t\treturn this;\n\t},\n\n\tfillImage: function(url, width, height, left, top, color1, color2){\n\t\tvar pattern = this._createBrush('fill', 'pattern');\n\n\t\tvar image = createElement('image');\n\t\tDOM.link(image, url);\n\t\timage.setAttribute('width', width);\n\t\timage.setAttribute('height', height);\n\t\timage.setAttribute('preserveAspectRatio', 'none'); // none, xMidYMid slice, xMidYMid meet\n\n\t\tif (color1 != null){\n\t\t\tcolor1 = new Color(color1);\n\t\t\tif (color2 == null){\n\t\t\t\tcolor2 = new Color(color1);\n\t\t\t\tcolor2.alpha = 0;\n\t\t\t} else {\n\t\t\t\tcolor2 = new Color(color2);\n\t\t\t}\n\n\t\t\tvar r = (color1.red - color2.red) / (255 * 3),\n\t\t\t\tg = (color1.green - color2.green) / (255 * 3),\n\t\t\t\tb = (color1.blue - color2.blue) / (255 * 3),\n\t\t\t\ta = (color1.alpha - color2.alpha) / 3;\n\n\t\t\tvar matrix = [\n\t\t\t\tr, r, r, 0, color2.red / 255,\n\t\t\t\tg, g, g, 0, color2.green / 255,\n\t\t\t\tb, b, b, 0, color2.blue / 255,\n\t\t\t\ta, a, a, 0, color2.alpha\n\t\t\t];\n\n\t\t\tvar filter = createElement('filter');\n\t\t\tfilter.setAttribute('id', 'testfilter' + this.uid);\n\n\t\t\tvar cm = createElement('feColorMatrix');\n\t\t\tcm.setAttribute('type', 'matrix');\n\t\t\tcm.setAttribute('values', matrix.join(' '));\n\n\t\t\timage.setAttribute('fill', '#000');\n\t\t\timage.setAttribute('filter', 'url(#testfilter' + this.uid + ')');\n\n\t\t\tfilter.appendChild(cm);\n\t\t\tpattern.appendChild(filter);\n\t\t}\n\n\t\tpattern.appendChild(image);\n\n\t\tpattern.setAttribute('patternUnits', 'userSpaceOnUse');\n\t\tpattern.setAttribute('patternContentsUnits', 'userSpaceOnUse');\n\n\t\tpattern.setAttribute('x', left || 0);\n\t\tpattern.setAttribute('y', top || 0);\n\n\t\tpattern.setAttribute('width', width);\n\t\tpattern.setAttribute('height', height);\n\n\t\t//pattern.setAttribute('viewBox', '0 0 75 50');\n\t\t//pattern.setAttribute('preserveAspectRatio', 'xMidYMid slice');\n\n\t\treturn this;\n\t},\n\n\tstroke: function(color, width, cap, join, dash){\n\t\tvar element = this.element;\n\t\telement.setAttribute('stroke-width', (width != null) ? width : 1);\n\t\telement.setAttribute('stroke-linecap', (cap != null) ? cap : 'round');\n\t\telement.setAttribute('stroke-linejoin', (join != null) ? join : 'round');\n\t\tif (dash) {\n\t\t\telement.setAttribute('stroke-dasharray', dash.join(','));\n\t\t}\n\t\tthis._setColor('stroke', color);\n\t\treturn this;\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/node.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Element = require('../../dom/shadow');\nvar DOM = require('./dom');\n\nmodule.exports = Class(Element, Transform, {\n\n\tinitialize: function(tag){\n\t\tthis.uid = DOM.uniqueID();\n\t\tvar element = this.element = DOM.createElement(tag);\n\t\telement.setAttribute('id', 'e' + this.uid);\n\t},\n\t\n\t// transforms\n\n\t_transform: function(){\n\t\tvar m = this;\n\t\tthis.element.setAttribute('transform', 'matrix(' + [m.xx, m.yx, m.xy, m.yy, m.x, m.y] + ')');\n\t},\n\t\n\tblend: function(opacity){\n\t\tthis.element.setAttribute('opacity', opacity);\n\t\treturn this;\n\t},\n\t\n\t// visibility\n\t\n\thide: function(){\n\t\tthis.element.setAttribute('display', 'none');\n\t\treturn this;\n\t},\n\t\n\tshow: function(){\n\t\tthis.element.setAttribute('display', '');\n\t\treturn this;\n\t},\n\t\n\t// interaction\n\t\n\tindicate: function(cursor, tooltip){\n\t\tvar element = this.element;\n\t\tif (cursor) this.element.style.cursor = cursor;\n\t\tif (tooltip){\n\t\t\tvar title = this.titleElement; \n\t\t\tif (title){\n\t\t\t\ttitle.firstChild.nodeValue = tooltip;\n\t\t\t} else {\n\t\t\t\tthis.titleElement = title = DOM.createElement('title');\n\t\t\t\ttitle.appendChild(DOM.createTextNode(tooltip));\n\t\t\t\telement.insertBefore(title, element.firstChild);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/group.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\nvar DOM = require('./dom');\n\nmodule.exports = Class(Node, Container, {\n\n\telement_initialize: Node.prototype.initialize,\n\n\tinitialize: function(width, height){\n\t\tthis.element_initialize('g');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.defs = DOM.createElement('defs');\n\t\tthis.element.appendChild(this.defs);\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/svg/text.js":"var Class = require('../../core/class');\nvar Path = require('./path');\nvar Base = require('./base');\nvar Surface = require('./surface');\nvar DOM = require('./dom');\nvar createElement = DOM.createElement;\n\nvar ua = typeof navigator !== 'undefined' && navigator && navigator.userAgent,\n    hasBaseline = !(/opera|safari|ie/i).test(ua) || (/chrome/i).test(ua);\n\nvar fontAnchors = { left: 'start', center: 'middle', right: 'end' },\n    fontAnchorOffsets = { middle: '50%', end: '100%' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize('text');\n\t\tthis.draw.apply(this, arguments);\n\t},\n\t\n\tdraw: function(text, font, alignment, path){\n\t\tvar element = this.element;\n\t\n\t\tif (font){\n\t\t\tif (typeof font == 'string'){\n\t\t\t\telement.style.font = font;\n\t\t\t} else {\n\t\t\t\tfor (var key in font){\n\t\t\t\t\tvar ckey = key.camelCase ? key.camelCase() : key;\n\t\t\t\t\t// NOT UNIVERSALLY SUPPORTED OPTIONS\n\t\t\t\t\t// if (ckey == 'kerning') element.setAttribute('kerning', font[key] ? 'auto' : '0');\n\t\t\t\t\t// else if (ckey == 'letterSpacing') element.setAttribute('letter-spacing', Number(font[key]) + 'ex');\n\t\t\t\t\t// else if (ckey == 'rotateGlyphs') element.setAttribute('glyph-orientation-horizontal', font[key] ? '270deg' : '');\n\t\t\t\t\t// else\n\t\t\t\t\telement.style[ckey] = font[key];\n\t\t\t\t}\n\t\t\t\telement.style.lineHeight = '0.5em';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (alignment) element.setAttribute('text-anchor', this.textAnchor = (fontAnchors[alignment] || alignment));\n\n\t\tif (path && typeof path != 'number'){\n\t\t\tthis._createPaths(new Path(path));\n\t\t} else if (path === false){\n\t\t\tthis._ejectPaths();\n\t\t\tthis.pathElements = null;\n\t\t}\n\t\t\n\t\tvar paths = this.pathElements, child;\n\t\t\n\t\twhile ((child = element.firstChild)){\n\t\t\telement.removeChild(child);\n\t\t}\n\t\t\n\t\t// Note: Gecko will (incorrectly) align gradients for each row, while others applies one for the entire element\n\t\t\n\t\tvar lines = String(text).split(/\\r?\\n/), l = lines.length,\n\t\t    baseline = 'central';\n\t\t\n\t\tif (paths && l > paths.length) l = paths.length;\n\t\t\n\t\tif (hasBaseline) element.setAttribute('dominant-baseline', baseline);\n\n\t\tDOM.preserveSpace(element);\n\t\t\n\t\tfor (var i = 0; i < l; i++){\n\t\t\tvar line = lines[i], row, content;\n\t\t\tif (paths){\n\t\t\t\trow = createElement('textPath');\n\t\t\t\tDOM.link(row, '#' + paths[i].getAttribute('id'));\n\t\t\t\trow.setAttribute('startOffset', fontAnchorOffsets[this.textAnchor] || 0);\n\t\t\t} else {\n\t\t\t\trow = createElement('tspan');\n\t\t\t\trow.setAttribute('x', 0);\n\t\t\t\trow.setAttribute('y', (i * 1.1 + 0.5) + 'em');\n\t\t\t}\n\t\t\tif (hasBaseline){\n\t\t\t\trow.setAttribute('dominant-baseline', baseline);\n\t\t\t\tcontent = row;\n\t\t\t} else if (paths){\n\t\t\t\tcontent = createElement('tspan');\n\t\t\t\tcontent.setAttribute('dy', '0.35em');\n\t\t\t\trow.appendChild(content);\n\t\t\t} else {\n\t\t\t\tcontent = row;\n\t\t\t\trow.setAttribute('y', (i * 1.1 + 0.85) + 'em');\n\t\t\t}\n\t\t\tDOM.preserveSpace(content);\n\t\t\tcontent.appendChild(DOM.createTextNode(line));\n\t\t\telement.appendChild(row);\n\t\t}\n\t\t\n\t\t// Measure\n\t\t// TODO: Move to lazy ES5 left/top/width/height/bottom/right property getters\n\t\tvar bb;\n\t\ttry { bb = element.getBBox(); } catch (x){ }\n\t\tif (!bb || !bb.width) bb = this._whileInDocument(element.getBBox, element);\n\t\t\n\t\tthis.left = bb.x;\n\t\tthis.top = bb.y;\n\t\tthis.width = bb.width;\n\t\tthis.height = bb.height;\n\t\tthis.right = bb.x + bb.width;\n\t\tthis.bottom = bb.y + bb.height;\n\t\treturn this;\n\t},\n\t\n\t// TODO: Unify path injection with gradients and imagefills\n\n\tbase_place: Base.prototype._place,\n\n\t_place: function(){\n\t\tif (this.parentNode){\n\t\t\tthis._injectPaths();\n\t\t} else {\n\t\t\tthis._ejectPaths();\n\t\t}\n\t\treturn this.base_place();\n\t},\n\t\n\t_injectPaths: function(){\n\t\tvar paths = this.pathElements;\n\t\tif (!this.parentNode || !paths) return;\n\t\tvar defs = this.parentNode.defs;\n\t\tfor (var i = 0, l = paths.length; i < l; i++)\n\t\t\tdefs.appendChild(paths[i]);\n\t},\n\t\n\t_ejectPaths: function(){\n\t\tvar paths = this.pathElements;\n\t\tif (!paths) return;\n\t\tfor (var i = 0, l = paths; i < l; i++){\n\t\t\tvar path = paths[i];\n\t\t\tif (path.parentNode)\n\t\t\t\tpath.parentNode.removeChild(paths[i]);\n\t\t}\n\t},\n\t\n\t_createPaths: function(path){\n\t\tthis._ejectPaths();\n\t\tvar id = 'p' + DOM.uniqueID() + '-';\n\n\t\t//splitPaths = []; splitPath = ['M', 0, 0];\n\t\t//path.visit(splitLine, splitCurve, null, splitMove);\n\t\t//splitPaths.push(splitPath);\n\t\tvar splitPaths = [path.path];\n\t\t\n\t\tvar result = [];\n\t\tfor (var i = 0, l = splitPaths.length; i < l; i++){\n\t\t\tvar p = createElement('path');\n\t\t\tp.setAttribute('d', splitPaths[i].join(' '));\n\t\t\tp.setAttribute('id', id + i);\n\t\t\tresult.push(p);\n\t\t}\n\t\tthis.pathElements = result;\n\t\tthis._injectPaths();\n\t},\n\t\n\t_whileInDocument: function(fn, bind){\n\t\t// Temporarily inject into the document\n\t\tvar element = this.element,\n\t\t    container = this.parentNode,\n\t\t\tparent = element.parentNode,\n\t\t\tsibling = element.nextSibling,\n\t\t\tbody = element.ownerDocument.body,\n\t\t\tcanvas = new Surface(1, 1).inject(body);\n\t\tthis.inject(canvas);\n\t\tvar result = fn.call(bind);\n\t\tcanvas.eject();\n\t\tif (container) this.inject(container);\n\t\tif (parent) parent.insertBefore(element, sibling);\n\t\treturn result;\n\t}\n\n});\n\n/* split each continuous line into individual paths */\n\n/*\nvar pathSplitter = new CorePath();\npathSplitter.splitPaths = [];\n\nvar PathPerRow = Class(CorePath, {\n\nfunction splitMove(sx, sy, x, y){\n\tif (splitPath.length > 3) splitPaths.push(splitPath);\n\tsplitPath = ['M', x, y];\n};\n\nfunction splitLine(sx, sy, x, y){\n\tsplitPath.push('L', x, y);\n};\n\nfunction splitCurve(sx, sy, p1x, p1y, p2x, p2y, x, y){\n\tsplitPath.push('C', p1x, p1y, p2x, p2y, x, y);\n};\n\n});*/\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml.js":"exports.Surface = require('./vml/surface');\nexports.Path = require('./vml/path');\nexports.Shape = require('./vml/shape');\nexports.Group = require('./vml/group');\nexports.ClippingRectangle = require('./vml/clippingrectangle');\nexports.Text = require('./vml/text');\n\nvar DOM = require('./vml/dom');\nif (typeof document !== 'undefined') DOM.init(document);\n\nrequire('./current').setCurrent(exports);\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/surface.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Element = require('../../dom/native');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nvar VMLSurface = Class(Element, Container, {\n\t\n\tinitialize: function VMLSurface(width, height, existingElement){\n\t\tthis.element = existingElement || document.createElement('vml');\n\t\tthis.containerElement = DOM.createElement('group');\n\t\tthis.element.appendChild(this.containerElement);\n\t\tif (width != null && height != null) this.resize(width, height);\n\t},\n\n\tresize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tvar style = this.element.style;\n\t\tstyle.pixelWidth = width;\n\t\tstyle.pixelHeight = height;\n\t\t\n\t\tstyle = this.containerElement.style;\n\t\tstyle.width = width;\n\t\tstyle.height = height;\n\t\t\n\t\tvar halfPixel = (0.5 * precision);\n\t\t\n\t\tthis.containerElement.coordorigin = halfPixel + ',' + halfPixel;\n\t\tthis.containerElement.coordsize = (width * precision) + ',' + (height * precision);\n\n\t\treturn this;\n\t}\n\t\n});\n\nVMLSurface.tagName = 'av:vml';\n\nmodule.exports = VMLSurface;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/dom.js":"var VMLCSS = 'behavior:url(#default#VML);display:inline-block;position:absolute;left:0px;top:0px;';\n\nvar styleSheet, styledTags = {}, styleTag = function(tag){\n\tif (styleSheet) styledTags[tag] = styleSheet.addRule('av\\\\:' + tag, VMLCSS);\n};\n\nexports.init = function(document){\n\n\tvar namespaces;\n\ttry { // IE9 workaround: sometimes it throws here\n\t\tnamespaces = document.namespaces;\n\t} catch (e) {\n\t}\n\tif (!namespaces) return false;\n\n\tnamespaces.add('av', 'urn:schemas-microsoft-com:vml');\n\tnamespaces.add('ao', 'urn:schemas-microsoft-com:office:office');\n\n\tstyleSheet = document.createStyleSheet();\n\tstyleSheet.addRule('vml', 'display:inline-block;position:relative;overflow:hidden;');\n/*\tstyleTag('skew');\n\tstyleTag('fill');\n\tstyleTag('stroke');\n\tstyleTag('path');\n\tstyleTag('textpath');\n\tstyleTag('group');*/\n\n\tstyleTag('vml');\n\n\treturn true;\n\n};\n\nexports.createElement = function(tag){\n\tif (!(tag in styledTags)) styleTag(tag);\n\treturn document.createElement('av:' + tag);\n};\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/path.js":"var Class = require('../../core/class');\nvar Path = require('../../core/path');\n\nvar precision = 100;\n\nvar round = Math.round;\n\nvar VMLPath = Class(Path, {\n\n\tinitialize: function(path){\n\t\tthis.reset();\n\t\tif (path instanceof VMLPath){\n\t\t\tthis.path = [Array.prototype.join.call(path.path, ' ')];\n\t\t} else if (path){\n\t\t\tif (path.applyToPath)\n\t\t\t\tpath.applyToPath(this);\n\t\t\telse\n\t\t\t\tthis.push(path);\n\t\t}\n\t},\n\n\tonReset: function(){\n\t\tthis.path = [];\n\t},\n\n\tonMove: function(sx, sy, x, y){\n\t\tthis.path.push('m', round(x * precision), round(y * precision));\n\t},\n\n\tonLine: function(sx, sy, x, y){\n\t\tthis.path.push('l', round(x * precision), round(y * precision));\n\t},\n\n\tonBezierCurve: function(sx, sy, p1x, p1y, p2x, p2y, x, y){\n\t\tthis.path.push('c',\n\t\t\tround(p1x * precision), round(p1y * precision),\n\t\t\tround(p2x * precision), round(p2y * precision),\n\t\t\tround(x * precision), round(y * precision)\n\t\t);\n\t},\n\n\t_arcToBezier: Path.prototype.onArc,\n\n\tonArc: function(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation){\n\t\tif (rx != ry || rotation) return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);\n\t\tcx *= precision;\n\t\tcy *= precision;\n\t\trx *= precision;\n\t\tthis.path.push(ccw ? 'at' : 'wa',\n\t\t\tround(cx - rx), round(cy - rx),\n\t\t\tround(cx + rx), round(cy + rx),\n\t\t\tround(sx * precision), round(sy * precision),\n\t\t\tround(ex * precision), round(ey * precision)\n\t\t);\n\t},\n\n\tonClose: function(){\n\t\tthis.path.push('x');\n\t},\n\n\ttoVML: function(){\n\t\treturn this.path.join(' ');\n\t}\n\n});\n\nVMLPath.prototype.toString = VMLPath.prototype.toVML;\n\nmodule.exports = VMLPath;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/shape.js":"var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\t\n\tinitialize: function(path, width, height){\n\t\tthis.base_initialize('shape');\n\n\t\tvar p = this.pathElement = DOM.createElement('path');\n\t\tp.gradientshapeok = true;\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tif (path != null) this.draw(path);\n\t},\n\t\n\t// SVG to VML\n\t\n\tdraw: function(path, width, height){\n\t\t\n\t\tif (!(path instanceof Path)) path = new Path(path);\n\t\tthis._vml = path.toVML();\n\t\t//this._size = path.measure();\n\t\t\n\t\tif (width != null) this.width = width;\n\t\tif (height != null) this.height = height;\n\t\t\n\t\tif (!this._boxCoords) this._transform();\n\t\tthis._redraw(this._prefix, this._suffix);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t// radial gradient workaround\n\n\t_redraw: function(prefix, suffix){\n\t\tvar vml = this._vml || '';\n\n\t\tthis._prefix = prefix;\n\t\tthis._suffix = suffix\n\t\tif (prefix){\n\t\t\tvml = [\n\t\t\t\tprefix, vml, suffix,\n\t\t\t\t// Don't stroke the path with the extra ellipse, redraw the stroked path separately\n\t\t\t\t'ns e', vml, 'nf'\n\t\t\t].join(' ');\n\t\t}\n\n\t\tthis.element.path = vml + 'e';\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tvar fill = this._createGradient('gradientradial', stops);\n\t\tif (focusX == null) focusX = (this.left || 0) + (this.width || 0) * 0.5;\n\t\tif (focusY == null) focusY = (this.top || 0) + (this.height || 0) * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5) || 0;\n\t\tif (radiusX == null) radiusX = (this.width || 0) * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\t\t\n\t\tvar cx = Math.round(centerX * precision),\n\t\t\tcy = Math.round(centerY * precision),\n\n\t\t\trx = Math.round(radiusX * 2 * precision),\n\t\t\try = Math.round(radiusY * 2 * precision),\n\n\t\t\tarc = ['wa', cx - rx, cy - ry, cx + rx, cy + ry].join(' ');\n\n\t\tthis._redraw(\n\t\t\t// Resolve rendering bug\n\t\t\t['m', cx, cy - ry, 'l', cx, cy - ry].join(' '),\n\t\t\t// Draw an ellipse around the path to force an elliptical gradient on any shape\n\t\t\t[\n\t\t\t\t'm', cx, cy - ry,\n\t\t\t\tarc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry,\n\t\t\t\tarc, cx, cy - ry, cx, cy + ry, arc, cx, cy + ry, cx, cy - ry\n\t\t\t].join(' ')\n\t\t);\n\n\t\tthis._boxCoords = { left: focusX - 2, top: focusY - 2, width: 4, height: 4 };\n\t\t\n\t\tfill.focusposition = '0.5,0.5';\n\t\tfill.focussize = '0 0';\n\t\tfill.focus = '50%';\n\t\t\n\t\tthis._transform();\n\t\t\n\t\treturn this;\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/base.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Color = require('../../core/color');\nvar Node = require('./node');\nvar DOM = require('./dom');\n\nvar precision = 100;\n\nvar defaultBox = { left: 0, top: 0, width: 500, height: 500 };\n\nmodule.exports = Class(Node, {\n\n\telement_initialize: Node.prototype.initialize,\n\n\tinitialize: function(tag){\n\t\tthis.element_initialize(tag);\n\t\tvar element = this.element;\n\t\t\n\t\tvar skew = this.skewElement = DOM.createElement('skew');\n\t\tskew.on = true;\n\t\telement.appendChild(skew);\n\n\t\tvar fill = this.fillElement = DOM.createElement('fill');\n\t\tfill.on = false;\n\t\telement.appendChild(fill);\n\t\t\n\t\tvar stroke = this.strokeElement = DOM.createElement('stroke');\n\t\tstroke.on = false;\n\t\telement.appendChild(stroke);\n\t},\n\t\n\t/* transform */\n\t\n\t_transform: function(){\n\t\tvar container = this.parentNode;\n\t\t\n\t\t// Active Transformation Matrix\n\t\tvar m = container ? new Transform(container._activeTransform).transform(this) : this;\n\t\t\n\t\t// Box in shape user space\n\t\t\n\t\tvar box = this._boxCoords || this._size || defaultBox;\n\t\t\n\t\tvar originX = box.left || 0,\n\t\t\toriginY = box.top || 0,\n\t\t\twidth = box.width || 1,\n\t\t\theight = box.height || 1;\n\t\t\t\t\n\t\t// Flipped\n\t    var flip = m.yx / m.xx > m.yy / m.xy;\n\t\tif (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = !flip;\n\t\tflip = flip ? -1 : 1;\n\t\t\n\t\tm = new Transform().scale(flip, 1).transform(m);\n\t\t\n\t\t// Rotation is approximated based on the transform\n\t\tvar rotation = Math.atan2(-m.xy, m.yy) * 180 / Math.PI;\n\t\t\n\t\t// Reverse the rotation, leaving the final transform in box space\n\t\tvar rad = rotation * Math.PI / 180, sin = Math.sin(rad), cos = Math.cos(rad);\n\t\t\n\t\tvar transform = new Transform(\n\t\t\t(m.xx * cos - m.xy * sin),\n\t\t\t(m.yx * cos - m.yy * sin) * flip,\n\t\t\t(m.xy * cos + m.xx * sin) * flip,\n\t\t\t(m.yy * cos + m.yx * sin)\n\t\t);\n\n\t\tvar rotationTransform = new Transform().rotate(rotation, 0, 0);\n\n\t\tvar shapeToBox = new Transform().rotate(-rotation, 0, 0).transform(m).moveTo(0,0);\n\n\t\t// Scale box after reversing rotation\n\t\twidth *= Math.abs(shapeToBox.xx);\n\t\theight *= Math.abs(shapeToBox.yy);\n\t\t\n\t\t// Place box\n\t\tvar left = m.x, top = m.y;\n\t\t\n\t\t// Compensate for offset by center origin rotation\n\t\tvar vx = -width / 2, vy = -height / 2;\n\t\tvar point = rotationTransform.point(vx, vy);\n\t\tleft -= point.x - vx;\n\t\ttop -= point.y - vy;\n\t\t\n\t\t// Adjust box position based on offset\n\t\tvar rsm = new Transform(m).moveTo(0,0);\n\t\tpoint = rsm.point(originX, originY);\n\t\tleft += point.x;\n\t\ttop += point.y;\n\t\t\n\t\tif (flip < 0) left = -left - width;\n\t\t\n\t\t// Place transformation origin\n\t\tvar point0 = rsm.point(-originX, -originY);\n\t\tvar point1 = rotationTransform.point(width, height);\n\t\tvar point2 = rotationTransform.point(width, 0);\n\t\tvar point3 = rotationTransform.point(0, height);\n\t\t\n\t\tvar minX = Math.min(0, point1.x, point2.x, point3.x),\n\t\t    maxX = Math.max(0, point1.x, point2.x, point3.x),\n\t\t    minY = Math.min(0, point1.y, point2.y, point3.y),\n\t\t    maxY = Math.max(0, point1.y, point2.y, point3.y);\n\t\t\n\t\tvar transformOriginX = (point0.x - point1.x / 2) / (maxX - minX) * flip,\n\t\t    transformOriginY = (point0.y - point1.y / 2) / (maxY - minY);\n\t\t\n\t\t// Adjust the origin\n\t\tpoint = shapeToBox.point(originX, originY);\n\t\toriginX = point.x;\n\t\toriginY = point.y;\n\t\t\n\t\t// Scale stroke\n\t\tvar strokeWidth = this._strokeWidth;\n\t\tif (strokeWidth){\n\t\t\t// Scale is the hypothenus between the two vectors\n\t\t\t// TODO: Use area calculation instead\n\t\t\tvar vx = m.xx + m.xy, vy = m.yy + m.yx;\n\t\t\tstrokeWidth *= Math.sqrt(vx * vx + vy * vy) / Math.sqrt(2);\n\t\t}\n\t\t\n\t\t// convert to multiplied precision space\n\t\toriginX *= precision;\n\t\toriginY *= precision;\n\t\tleft *= precision;\n\t\ttop *= precision;\n\t\twidth *= precision;\n\t\theight *= precision;\n\t\t\n\t\t// Set box\n\t\tvar element = this.element;\n\t\telement.coordorigin = originX + ',' + originY;\n\t\telement.coordsize = width + ',' + height;\n\t\telement.style.left = left + 'px';\n\t\telement.style.top = top + 'px';\n\t\telement.style.width = width;\n\t\telement.style.height = height;\n\t\telement.style.rotation = rotation.toFixed(8);\n\t\telement.style.flip = flip < 0 ? 'x' : '';\n\t\t\n\t\t// Set transform\n\t\tvar skew = this.skewElement;\n\t\tskew.matrix = [transform.xx.toFixed(4), transform.xy.toFixed(4), transform.yx.toFixed(4), transform.yy.toFixed(4), 0, 0];\n\t\tskew.origin = transformOriginX + ',' + transformOriginY;\n\n\t\t// Set stroke\n\t\tthis.strokeElement.weight = strokeWidth + 'px';\n\t},\n\t\n\t/* styles */\n\n\t_createGradient: function(style, stops){\n\t\tvar fill = this.fillElement;\n\n\t\t// Temporarily eject the fill from the DOM\n\t\tthis.element.removeChild(fill);\n\n\t\tfill.type = style;\n\t\tfill.method = 'none';\n\t\tfill.rotate = true;\n\n\t\tvar colors = [], color1, color2;\n\n\t\tvar addColor = function(offset, color){\n\t\t\tcolor = Color.detach(color);\n\t\t\tif (color1 == null) color1 = color2 = color;\n\t\t\telse color2 = color;\n\t\t\tcolors.push(offset + ' ' + color[0]);\n\t\t};\n\n\t\t// Enumerate stops, assumes offsets are enumerated in order\n\t\tif ('length' in stops) for (var i = 0, l = stops.length - 1; i <= l; i++) addColor(i / l, stops[i]);\n\t\telse for (var offset in stops) addColor(offset, stops[offset]);\n\t\t\n\t\tfill.color = color1[0];\n\t\tfill.color2 = color2[0];\n\t\t\n\t\t//if (fill.colors) fill.colors.value = colors; else\n\t\tfill.colors = colors;\n\n\t\t// Opacity order gets flipped when color stops are specified\n\t\tfill.opacity = color2[1];\n\t\tfill['ao:opacity2'] = color1[1];\n\n\t\tfill.on = true;\n\t\tthis.element.appendChild(fill);\n\t\treturn fill;\n\t},\n\t\n\t_setColor: function(type, color){\n\t\tvar element = type == 'fill' ? this.fillElement : this.strokeElement;\n\t\tif (color == null){\n\t\t\telement.on = false;\n\t\t} else {\n\t\t\tcolor = Color.detach(color);\n\t\t\telement.color = color[0];\n\t\t\telement.opacity = color[1];\n\t\t\telement.on = true;\n\t\t}\n\t},\n\t\n\tfill: function(color){\n\t\tif (arguments.length > 1){\n\t\t\tthis.fillLinear(arguments);\n\t\t} else {\n\t\t\tthis._boxCoords = defaultBox;\n\t\t\tvar fill = this.fillElement;\n\t\t\tfill.type = 'solid';\n\t\t\tfill.color2 = '';\n\t\t\tfill['ao:opacity2'] = '';\n\t\t\tif (fill.colors) fill.colors.value = '';\n\t\t\tthis._setColor('fill', color);\n\t\t}\n\t\treturn this;\n\t},\n\n\tfillRadial: function(stops, focusX, focusY, radiusX, radiusY, centerX, centerY){\n\t\tvar fill = this._createGradient('gradientradial', stops);\n\t\tif (focusX == null) focusX = this.left + this.width * 0.5;\n\t\tif (focusY == null) focusY = this.top + this.height * 0.5;\n\t\tif (radiusY == null) radiusY = radiusX || (this.height * 0.5);\n\t\tif (radiusX == null) radiusX = this.width * 0.5;\n\t\tif (centerX == null) centerX = focusX;\n\t\tif (centerY == null) centerY = focusY;\n\t\t\n\t\tcenterX += centerX - focusX;\n\t\tcenterY += centerY - focusY;\n\t\t\n\t\tvar box = this._boxCoords = {\n\t\t\tleft: centerX - radiusX * 2,\n\t\t\ttop: centerY - radiusY * 2,\n\t\t\twidth: radiusX * 4,\n\t\t\theight: radiusY * 4\n\t\t};\n\t\tfocusX -= box.left;\n\t\tfocusY -= box.top;\n\t\tfocusX /= box.width;\n\t\tfocusY /= box.height;\n\n\t\tfill.focussize = '0 0';\n\t\tfill.focusposition = focusX + ',' + focusY;\n\t\tfill.focus = '50%';\n\t\t\n\t\tthis._transform();\n\t\t\n\t\treturn this;\n\t},\n\n\tfillLinear: function(stops, x1, y1, x2, y2){\n\t\tvar fill = this._createGradient('gradient', stops);\n\t\tfill.focus = '100%';\n\t\tif (arguments.length == 5){\n\t\t\tvar w = Math.abs(x2 - x1), h = Math.abs(y2 - y1);\n\t\t\tthis._boxCoords = {\n\t\t\t\tleft: Math.min(x1, x2),\n\t\t\t\ttop: Math.min(y1, y2),\n\t\t\t\twidth: w < 1 ? h : w,\n\t\t\t\theight: h < 1 ? w : h\n\t\t\t};\n\t\t\tfill.angle = (360 + Math.atan2((x2 - x1) / h, (y2 - y1) / w) * 180 / Math.PI) % 360;\n\t\t} else {\n\t\t\tthis._boxCoords = null;\n\t\t\tfill.angle = (x1 == null) ? 0 : (90 + x1) % 360;\n\t\t}\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\tfillImage: function(url, width, height, left, top, color1, color2){\n\t\tvar fill = this.fillElement;\n\t\tif (color1 != null){\n\t\t\tcolor1 = Color.detach(color1);\n\t\t\tif (color2 != null) color2 = Color.detach(color2);\n\t\t\tfill.type = 'pattern';\n\t\t\tfill.color = color1[0];\n\t\t\tfill.color2 = color2 == null ? color1[0] : color2[0];\n\t\t\tfill.opacity = color2 == null ? 0 : color2[1];\n\t\t\tfill['ao:opacity2'] = color1[1];\n\t\t} else {\n\t\t\tfill.type = 'tile';\n\t\t\tfill.color = '';\n\t\t\tfill.color2 = '';\n\t\t\tfill.opacity = 1;\n\t\t\tfill['ao:opacity2'] = 1;\n\t\t}\n\t\tif (fill.colors) fill.colors.value = '';\n\t\tfill.rotate = true;\n\t\tfill.src = url;\n\t\t\n\t\tfill.size = '1,1';\n\t\tfill.position = '0,0';\n\t\tfill.origin = '0,0';\n\t\tfill.aspect = 'ignore'; // ignore, atleast, atmost\n\t\tfill.on = true;\n\n\t\tif (!left) left = 0;\n\t\tif (!top) top = 0;\n\t\tthis._boxCoords = width ? { left: left + 0.5, top: top + 0.5, width: width, height: height } : null;\n\t\tthis._transform();\n\t\treturn this;\n\t},\n\n\t/* stroke */\n\t\n\tstroke: function(color, width, cap, join){\n\t\tvar stroke = this.strokeElement;\n\t\tthis._strokeWidth = (width != null) ? width : 1;\n\t\tstroke.weight = (width != null) ? width + 'px' : 1;\n\t\tstroke.endcap = (cap != null) ? ((cap == 'butt') ? 'flat' : cap) : 'round';\n\t\tstroke.joinstyle = (join != null) ? join : 'round';\n\n\t\tthis._setColor('stroke', color);\n\t\treturn this;\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/node.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Element = require('../../dom/shadow');\nvar DOM = require('./dom');\n\nmodule.exports = Class(Element, Transform, {\n\n\tinitialize: function(tag){\n\t\t//this.uid = uniqueID();\n\t\tvar element = this.element = DOM.createElement(tag);\n\t\t//element.setAttribute('id', 'e' + this.uid);\n\t},\n\n\t_place: function(){\n\t\tif (this.parentNode){\n\t\t\tthis._transform();\n\t\t}\n\t},\n\n\t// visibility\n\n\thide: function(){\n\t\tthis.element.style.display = 'none';\n\t\treturn this;\n\t},\n\n\tshow: function(){\n\t\tthis.element.style.display = '';\n\t\treturn this;\n\t},\n\n\t// interaction\n\n\tindicate: function(cursor, tooltip){\n\t\tif (cursor) this.element.style.cursor = cursor;\n\t\tif (tooltip) this.element.title = tooltip;\n\t\treturn this;\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/group.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\t\n\telement_initialize: Node.prototype.initialize,\n\t\n\tinitialize: function(width, height){\n\t\tthis.element_initialize('group');\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t},\n\n\t_transform: function(){\n\t\tvar element = this.element;\n\t\telement.coordorigin = '0,0';\n\t\telement.coordsize = '1000,1000';\n\t\telement.style.left = 0;\n\t\telement.style.top = 0;\n\t\telement.style.width = 1000;\n\t\telement.style.height = 1000;\n\t\telement.style.rotation = 0;\n\t\t\n\t\tvar container = this.parentNode;\n\t\tthis._activeTransform = container ? new Transform(container._activeTransform).transform(this) : this;\n\t\tvar node = this.firstChild;\n\t\twhile (node){\n\t\t\tnode._transform();\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/clippingrectangle.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Container = require('../../dom/container');\nvar Node = require('./node');\n\nmodule.exports = Class(Node, Container, {\n\n  element_initialize: Node.prototype.initialize,\n\n  initialize: function(width, height){\n    this.element_initialize('clippingrectangle');\n    this.width = width;\n    this.height = height;\n  },\n\n  _transform: function(){\n    var element = this.element;\n    element.clip = true;\n    element.coordorigin = -this.x + ',' + (-1 * this.y);\n    element.coordsize = this.width + ',' + this.height;\n    // IE8 doesn't like clipBottom.  Don't ask me why.\n    // element.style.clipBottom = this.height + this.y;\n    element.style.clipLeft = this.x;\n    element.style.clipRight = this.width + this.x;\n    element.style.clipTop = this.y;\n    element.style.left = -this.x;\n    element.style.top = -this.y;\n    element.style.width = this.width + this.x;\n    element.style.height = this.height + this.y;\n    element.style.rotation = 0;\n\n    var container = this.parentNode;\n    this._activeTransform = container ? new Transform(container._activeTransform).transform(this) : this;\n    var node = this.firstChild;\n    while (node){\n      node._transform();\n      node = node.nextSibling;\n    }\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/vml/text.js":"var Class = require('../../core/class');\nvar Base = require('./base');\nvar Path = require('./path');\nvar Surface = require('./surface');\nvar Group = require('./group');\nvar DOM = require('./dom');\n\nvar fontAnchors = { start: 'left', middle: 'center', end: 'right' };\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\n\tinitialize: function(text, font, alignment, path){\n\t\tthis.base_initialize('shape');\n\t\t\n\t\tvar p = this.pathElement = DOM.createElement('path');\n\t\tp.textpathok = true;\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tp = this.textPathElement = DOM.createElement(\"textpath\");\n\t\tp.on = true;\n\t\tp.style['v-text-align'] = 'left';\n\t\tthis.element.appendChild(p);\n\t\t\n\t\tthis.draw.apply(this, arguments);\n\t},\n\t\n\tdraw: function(text, font, alignment, path){\n\t\tvar element = this.element,\n\t\t    textPath = this.textPathElement,\n\t\t    style = textPath.style;\n\t\t\n\t\ttextPath.string = text;\n\t\t\n\t\tif (font){\n\t\t\tif (typeof font == 'string'){\n\t\t\t\tstyle.font = font;\n\t\t\t} else {\n\t\t\t\tfor (var key in font){\n\t\t\t\t\tvar ckey = key.camelCase ? key.camelCase() : key;\n\t\t\t\t\tif (ckey == 'fontFamily') style[ckey] = \"'\" + font[key] + \"'\";\n\t\t\t\t\t// NOT UNIVERSALLY SUPPORTED OPTIONS\n\t\t\t\t\t// else if (ckey == 'kerning') style['v-text-kern'] = !!font[key];\n\t\t\t\t\t// else if (ckey == 'rotateGlyphs') style['v-rotate-letters'] = !!font[key];\n\t\t\t\t\t// else if (ckey == 'letterSpacing') style['v-text-spacing'] = Number(font[key]) + '';\n\t\t\t\t\telse style[ckey] = font[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (alignment) style['v-text-align'] = fontAnchors[alignment] || alignment;\n\t\t\n\t\tif (path){\n\t\t\tthis.currentPath = path = new Path(path);\n\t\t\tthis.element.path = path.toVML();\n\t\t} else if (!this.currentPath){\n\t\t\tvar i = -1, offsetRows = '\\n';\n\t\t\twhile ((i = text.indexOf('\\n', i + 1)) > -1) offsetRows += '\\n';\n\t\t\ttextPath.string = offsetRows + textPath.string;\n\t\t\tthis.element.path = 'm0,0l1,0';\n\t\t}\n\t\t\n\t\t// Measuring the bounding box is currently necessary for gradients etc.\n\t\t\n\t\t// Clone element because the element is dead once it has been in the DOM\n\t\telement = element.cloneNode(true);\n\t\tstyle = element.style;\n\t\t\n\t\t// Reset coordinates while measuring\n\t\telement.coordorigin = '0,0';\n\t\telement.coordsize = '10000,10000';\n\t\tstyle.left = '0px';\n\t\tstyle.top = '0px';\n\t\tstyle.width = '10000px';\n\t\tstyle.height = '10000px';\n\t\tstyle.rotation = 0;\n\t\telement.removeChild(element.firstChild); // Remove skew\n\t\t\n\t\t// Inject the clone into the document\n\t\t\n\t\tvar canvas = new Surface(1, 1),\n\t\t    group = new Group(), // Wrapping it in a group seems to alleviate some client rect weirdness\n\t\t    body = element.ownerDocument.body;\n\t\t\n\t\tcanvas.inject(body);\n\t\tgroup.element.appendChild(element);\n\t\tgroup.inject(canvas);\n\t\t\n\t\tvar ebb = element.getBoundingClientRect(),\n\t\t    cbb = canvas.toElement().getBoundingClientRect();\n\t\t\n\t\tcanvas.eject();\n\t\t\n\t\tthis.left = ebb.left - cbb.left;\n\t\tthis.top = ebb.top - cbb.top;\n\t\tthis.width = ebb.right - ebb.left;\n\t\tthis.height = ebb.bottom - ebb.top;\n\t\tthis.right = ebb.right - cbb.left;\n\t\tthis.bottom = ebb.bottom - cbb.top;\n\t\t\n\t\tthis._transform();\n\n\t\t//this._size = { left: this.left, top: this.top, width: this.width, height: this.height};\n\t\treturn this;\n\t}\n\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/fast.js":"var VML = require('./vml');\nvar Canvas = require('./canvas');\nvar Base = require('./canvas/base');\n//var Flash = require('./flash');\n\n/*\nvar hasFlash = function(){\n\n\tvar flash = navigator.plugins && navigator.plugins['Shockwave Flash'];\n\ttry {\n\t\tflash = flash ? flash.description :\n\t\t\tnew ActiveXObject('ShockwaveFlash.ShockwaveFlash')\n\t\t\t.GetVariable('$version');\n\t} catch (x){ }\n\treturn flash && flash.match(/\\d+/) >= 9;\n\n};\n*/\n\nvar MODE = Base._genericContext ? Canvas : /*hasFlash() ? Flash :*/ VML;\n\nexports.Surface = MODE.Surface;\nexports.Path = MODE.Path;\nexports.Shape = MODE.Shape;\nexports.Group = MODE.Group;\nexports.ClippingRectangle = MODE.ClippingRectangle;\nexports.Text = MODE.Text;\n\nrequire('./current').setCurrent(exports);\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/fast-noSideEffects.js":"var hasCanvas = function(){\n\n  var canvas = document.createElement('canvas');\n  return canvas && !!canvas.getContext;\n\n};\n\nif (hasCanvas()) {\n  exports.Surface = require('./canvas/surface');\n  exports.Path = require('./canvas/path');\n  exports.Shape = require('./canvas/shape');\n  exports.Group = require('./canvas/group');\n  exports.ClippingRectangle = require('./canvas/clippingrectangle');\n  exports.Text = require('./canvas/text');\n} else {\n  exports.Surface = require('./vml/surface');\n  exports.Path = require('./vml/path');\n  exports.Shape = require('./vml/shape');\n  exports.Group = require('./vml/group');\n  exports.ClippingRectangle = require('./vml/clippingrectangle');\n  exports.Text = require('./vml/text');\n\n  var DOM = require('./vml/dom');\n  if (typeof document !== 'undefined') DOM.init(document);\n}\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script.js":"exports.Surface = require('./script/surface');\nexports.Path = require('./script/path');\nexports.Shape = require('./script/shape');\nexports.Group = require('./script/group');\nexports.Text = require('./script/text');\nexports.Font = require('./script/font');\nrequire('./current').setCurrent(exports);\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script/surface.js":"var Class = require('../../core/class');\nvar Container = require('../../dom/container');\nvar Modulizer = require('./modulizer');\n\nmodule.exports = Class(Container, Modulizer, {\n\n\tinitialize: function(width, height){\n\t\tthis.resize(width, height);\n\t},\n\n\tresize: function(width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\ttoExpression: function(){\n\t\tvar expr = this.artVar.property('Surface').construct(this.width, this.height);\n\t\tif (!this.firstChild) return expr;\n\t\tvar children = [], node = this.firstChild;\n\t\twhile (node){\n\t\t\tchildren.push(node);\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\tvar grab = expr.property('grab');\n\t\treturn grab.call.apply(grab, children);\n\t},\n\n\t// ignore\n\t\n\tsubscribe: function(){\n\t\treturn this;\n\t}\n\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script/modulizer.js":"var AST = require('../../lib/ast-js/ast');\n\nvar artVar = new AST.Variable('ART'),\n\tmoduleVar = new AST.Variable('module'),\n\texportsProp = moduleVar.property('exports'),\n\trequireVar = new AST.Variable('require'),\n\trequireART = requireVar.call('art'),\n\trequireStatement = artVar.assign(requireART);\n\nvar Modulizer = {\n\n\tartVar: artVar,\n\n\ttoExpression: function(){\n\t\tthrow new Error('You need to implement toExpression on this class.');\n\t},\n\n\t_toModuleStatements: function(){\n\t\tvar fn = new AST.Function(null, null, [ new AST.Return(this.toExpression()) ]);\n\t\treturn [requireStatement, exportsProp.assign(fn)];\n\t},\n\n\ttoModule: function(){\n\t\treturn new AST.Block(\n\t\t\t// Make this overridable even when mixed in\n\t\t\tModulizer._toModuleStatements.call(this)\n\t\t);\n\t}\n\n};\n\nmodule.exports = Modulizer;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/canvas/_image.js":"var Class = require('../../core/class');\nvar Base = require('./base');\n\nmodule.exports = Class(Base, {\n\n\tbase_initialize: Base.prototype.initialize,\n\t\n\tinitialize: function(src, width, height){\n\t\tthis.base_initialize();\n\t\tif (arguments.length == 3) this.draw.apply(this, arguments);\n\t},\n\t\n\tdraw: function(src, width, height){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this.invalidate();\n\t},\n\t\n\trenderTo: function(){ }\n\t\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script/font.js":"var Class = require('../../core/class');\r\nvar Base = require('./base');\r\nvar Modulizer = require('./modulizer');\r\nvar fonts = {}, fontsInUse = null;\r\n\r\nvar artVar = Base.prototype.artVar, artFont = artVar.property('Font');\r\n\r\nvar parseFontString = function(font){\r\n\tvar regexp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?)[ptexm\\%]*(?:\\s*\\/.*?)?\\s+)?\\s*\\\"?([^\\\"]*)/i,\r\n\t    match = regexp.exec(font);\r\n\treturn {\r\n\t\tfontFamily: match[3],\r\n\t\tfontSize: match[2],\r\n\t\tfontStyle: (/italic/.exec(match[1]) || ''),\r\n\t\tfontWeight: (/bold/.exec(match[1]) || '')\r\n\t};\r\n};\r\n\r\nvar Font = Class(Base, {\r\n\r\n\tbase_initialize: Base.prototype.initialize,\r\n\t\r\n\tinitialize: function(text, font, alignment){\r\n\t\tthis.base_initialize();\r\n\t\tif (text != null && font != null) this.draw(text, font, alignment);\r\n\t},\r\n\r\n\tdraw: function(text, fontArg, alignment){\r\n\t\tvar font = (typeof fontArg == 'string') ? parseFontString(fontArg) : fontArg;\r\n\t\tif (font){\r\n\t\t\tvar family = font.fontFamily || font['font-family'],\r\n\t\t\t\tweight = font.fontWeight || font['font-weight'] || 'normal',\r\n\t\t\t\tstyle = font.fontStyle || font['font-style'] || 'normal',\r\n\t\t\t\tsize = parseFloat(font.fontSize || font['font-size'] || font.size);\r\n\r\n\t\t\tthis.font = font.glyphs ? null : weight + style + family;\r\n\t\t}\r\n\t\tthis.args = Array.prototype.slice.call(arguments);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\tbase_toExpression: Base.prototype.toExpression,\r\n\r\n\ttoExpression: function(expr){\r\n\t\tif (this.font && fontsInUse) fontsInUse[this.font] = fonts[this.font];\r\n\t\tif (!expr) expr = this.args ? artFont.construct.apply(artFont, this.args) : artFont.construct();\r\n\t\treturn this.base_toExpression(expr);\r\n\t}\r\n\r\n});\r\n\r\nFont.register = function(font){\r\n\tvar face = font.face,\r\n\t    family = face['font-family'],\r\n\t    weight = (face['font-weight'] > 500 ? 'bold' : 'normal'),\r\n\t    style = (face['font-stretch'] == 'oblique' || face['font-style'] == 'oblique' || face['font-style'] == 'italic' ? 'italic' : 'normal');\r\n\tfonts[weight + style + family] = font;\r\n\treturn this;\r\n};\r\n\r\nvar _toModuleStatements = Modulizer._toModuleStatements;\r\n\r\nModulizer._toModuleStatements = function(){\r\n\tfontsInUse = {};\r\n\tvar statements = _toModuleStatements.call(this);\r\n\tfor (var font in fontsInUse){\r\n\t\tvar registerStatement = artFont.property('register').call(fontsInUse[font]);\r\n\t\tstatements.push(registerStatement);\r\n\t}\r\n\tstatements.push(statements[1]);\r\n\tstatements.splice(1, 1);\r\n\tfontsInUse = null;\r\n\treturn statements;\r\n};\r\n\r\nmodule.exports = Font;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script/base.js":"var Class = require('../../core/class');\nvar Color = require('../../core/color');\nvar Node = require('./node');\n\nColor.prototype.toExpression = Color.prototype.toHEX;\n\nmodule.exports = Class(Node, {\n\n\t/* styles */\n\t\n\tfill: function(color){ return this._addCall('fill', arguments); },\n\n\tfillRadial: function(stops, focusX, focusY, radius, centerX, centerY){ return this._addCall('fillRadial', arguments); },\n\n\tfillLinear: function(stops, angle){\n\t\tif (angle == null) return this._addCall('fill', stops);\n\t\treturn this._addCall('fillLinear', arguments);\n\t},\n\n\tfillImage: function(){ return this._addCall('fillImage', arguments); },\n\n\tstroke: function(color, width, cap, join){ return this._addCall('stroke', arguments); }\t\n\t\n});\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/modes/script/node.js":"var Class = require('../../core/class');\nvar Transform = require('../../core/transform');\nvar Modulizer = require('./modulizer');\nvar Element = require('../../dom/dummy');\n\nmodule.exports = Class(Modulizer, Transform, Element, {\n\n\tinitialize: function(){\n\t\tthis._calls = [];\n\t},\n\n\t_addCall: function(property, args){\n\t\tthis._calls.push({ prop: property, args: Array.prototype.slice.call(args) });\n\t\treturn this;\n\t},\n\t\n\ttoExpression: function(expr){\n\t\tvar calls = this._calls, propExpr;\n\t\tfor (var i = 0, l = calls.length; i < l; i++){\n\t\t\tvar call = calls[i];\n\t\t\tpropExpr = expr.property(call.prop);\n\t\t\texpr = propExpr.call.apply(propExpr, call.args);\n\t\t}\n\t\tif (this.xx != 1 || this.xy != 0 || this.yx != 0 || this.yy != 1){\n\t\t\tpropExpr = expr.property('transform');\n\t\t\texpr = propExpr.call.apply(propExpr, (this.x != 0 || this.y != 0) ? [\n\t\t\t\tthis.xx, this.xy,\n\t\t\t\tthis.yx, this.yy,\n\t\t\t\tthis.x, this.y\n\t\t\t] : [\n\t\t\t\tthis.xx, this.xy,\n\t\t\t\tthis.yx, this.yy\n\t\t\t]);\n\t\t} else if (this.x != 0 || this.y != 0){\n\t\t\texpr = expr.property('move').call(this.x, this.y);\n\t\t}\n\t\treturn expr;\n\t},\n\n\t// transforms\n\t\n\tblend: function(opacity){ return this._addCall('blend', arguments); },\n\n\t// visibility\n\t\n\thide: function(){ return this._addCall('hide', arguments); },\n\t\n\tshow: function(){ return this._addCall('show', arguments); },\n\t\n\t// interaction\n\t\n\tindicate: function(){ return this._addCall('indicate', arguments); },\n\t\n\t// ignore\n\t\n\tsubscribe: function(){\n\t\treturn this;\n\t}\n\t\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/colors.js":"var SVGParser = require('./core');\r\n\r\nvar parseColor = SVGParser.prototype.parseColor,\r\n\tnamedColors = {\r\n\t\t// Colors already in the Color class are commented out\r\n\t\taliceblue: '#f0f8ff',\r\n\t\tantiquewhite: '#faebd7',\r\n\t\t// aqua: '#00ffff',\r\n\t\taquamarine: '#7fffd4',\r\n\t\tazure: '#f0ffff',\r\n\t\tbeige: '#f5f5dc',\r\n\t\tbisque: '#ffe4c4',\r\n\t\t// black: '#000000',\r\n\t\tblanchedalmond: '#ffebcd',\r\n\t\t// blue: '#0000ff',\r\n\t\tblueviolet: '#8a2be2',\r\n\t\tbrown: '#a52a2a',\r\n\t\tburlywood: '#deb887',\r\n\t\tcadetblue: '#5f9ea0',\r\n\t\tchartreuse: '#7fff00',\r\n\t\tchocolate: '#d2691e',\r\n\t\tcoral: '#ff7f50',\r\n\t\tcornflowerblue: '#6495ed',\r\n\t\tcornsilk: '#fff8dc',\r\n\t\tcrimson: '#dc143c',\r\n\t\tcyan: '#00ffff',\r\n\t\tdarkblue: '#00008b',\r\n\t\tdarkcyan: '#008b8b',\r\n\t\tdarkgoldenrod: '#b8860b',\r\n\t\tdarkgray: '#a9a9a9',\r\n\t\tdarkgreen: '#006400',\r\n\t\tdarkgrey: '#a9a9a9',\r\n\t\tdarkkhaki: '#bdb76b',\r\n\t\tdarkmagenta: '#8b008b',\r\n\t\tdarkolivegreen: '#556b2f',\r\n\t\tdarkorange: '#ff8c00',\r\n\t\tdarkorchid: '#9932cc',\r\n\t\tdarkred: '#8b0000',\r\n\t\tdarksalmon: '#e9967a',\r\n\t\tdarkseagreen: '#8fbc8f',\r\n\t\tdarkslateblue: '#483d8b',\r\n\t\tdarkslategray: '#2f4f4f',\r\n\t\tdarkslategrey: '#2f4f4f',\r\n\t\tdarkturquoise: '#00ced1',\r\n\t\tdarkviolet: '#9400d3',\r\n\t\tdeeppink: '#ff1493',\r\n\t\tdeepskyblue: '#00bfff',\r\n\t\tdimgray: '#696969',\r\n\t\tdimgrey: '#696969',\r\n\t\tdodgerblue: '#1e90ff',\r\n\t\tfirebrick: '#b22222',\r\n\t\tfloralwhite: '#fffaf0',\r\n\t\tforestgreen: '#228b22',\r\n\t\t// fuchsia: '#ff00ff',\r\n\t\tgainsboro: '#dcdcdc',\r\n\t\tghostwhite: '#f8f8ff',\r\n\t\tgold: '#ffd700',\r\n\t\tgoldenrod: '#daa520',\r\n\t\t// gray: '#808080',\r\n\t\t// green: '#008000',\r\n\t\tgreenyellow: '#adff2f',\r\n\t\tgrey: '#808080',\r\n\t\thoneydew: '#f0fff0',\r\n\t\thotpink: '#ff69b4',\r\n\t\tindianred: '#cd5c5c',\r\n\t\tindigo: '#4b0082',\r\n\t\tivory: '#fffff0',\r\n\t\tkhaki: '#f0e68c',\r\n\t\tlavender: '#e6e6fa',\r\n\t\tlavenderblush: '#fff0f5',\r\n\t\tlawngreen: '#7cfc00',\r\n\t\tlemonchiffon: '#fffacd',\r\n\t\tlightblue: '#add8e6',\r\n\t\tlightcoral: '#f08080',\r\n\t\tlightcyan: '#e0ffff',\r\n\t\tlightgoldenrodyellow: '#fafad2',\r\n\t\tlightgray: '#d3d3d3',\r\n\t\tlightgreen: '#90ee90',\r\n\t\tlightgrey: '#d3d3d3',\r\n\t\tlightpink: '#ffb6c1',\r\n\t\tlightsalmon: '#ffa07a',\r\n\t\tlightseagreen: '#20b2aa',\r\n\t\tlightskyblue: '#87cefa',\r\n\t\tlightslategray: '#778899',\r\n\t\tlightslategrey: '#778899',\r\n\t\tlightsteelblue: '#b0c4de',\r\n\t\tlightyellow: '#ffffe0',\r\n\t\t// lime: '#00ff00',\r\n\t\tlimegreen: '#32cd32',\r\n\t\tlinen: '#faf0e6',\r\n\t\tmagenta: '#ff00ff',\r\n\t\t// maroon: '#800000',\r\n\t\tmediumaquamarine: '#66cdaa',\r\n\t\tmediumblue: '#0000cd',\r\n\t\tmediumorchid: '#ba55d3',\r\n\t\tmediumpurple: '#9370db',\r\n\t\tmediumseagreen: '#3cb371',\r\n\t\tmediumslateblue: '#7b68ee',\r\n\t\tmediumspringgreen: '#00fa9a',\r\n\t\tmediumturquoise: '#48d1cc',\r\n\t\tmediumvioletred: '#c71585',\r\n\t\tmidnightblue: '#191970',\r\n\t\tmintcream: '#f5fffa',\r\n\t\tmistyrose: '#ffe4e1',\r\n\t\tmoccasin: '#ffe4b5',\r\n\t\tnavajowhite: '#ffdead',\r\n\t\t// navy: '#000080',\r\n\t\toldlace: '#fdf5e6',\r\n\t\t// olive: '#808000',\r\n\t\tolivedrab: '#6b8e23',\r\n\t\t// orange: '#ffa500',\r\n\t\torangered: '#ff4500',\r\n\t\torchid: '#da70d6',\r\n\t\tpalegoldenrod: '#eee8aa',\r\n\t\tpalegreen: '#98fb98',\r\n\t\tpaleturquoise: '#afeeee',\r\n\t\tpalevioletred: '#db7093',\r\n\t\tpapayawhip: '#ffefd5',\r\n\t\tpeachpuff: '#ffdab9',\r\n\t\tperu: '#cd853f',\r\n\t\tpink: '#ffc0cb',\r\n\t\tplum: '#dda0dd',\r\n\t\tpowderblue: '#b0e0e6',\r\n\t\t// purple: '#800080',\r\n\t\t// red: '#ff0000',\r\n\t\trosybrown: '#bc8f8f',\r\n\t\troyalblue: '#4169e1',\r\n\t\tsaddlebrown: '#8b4513',\r\n\t\tsalmon: '#fa8072',\r\n\t\tsandybrown: '#f4a460',\r\n\t\tseagreen: '#2e8b57',\r\n\t\tseashell: '#fff5ee',\r\n\t\tsienna: '#a0522d',\r\n\t\t// silver: '#c0c0c0',\r\n\t\tskyblue: '#87ceeb',\r\n\t\tslateblue: '#6a5acd',\r\n\t\tslategray: '#708090',\r\n\t\tslategrey: '#708090',\r\n\t\tsnow: '#fffafa',\r\n\t\tspringgreen: '#00ff7f',\r\n\t\tsteelblue: '#4682b4',\r\n\t\ttan: '#d2b48c',\r\n\t\t// teal: '#008080',\r\n\t\tthistle: '#d8bfd8',\r\n\t\ttomato: '#ff6347',\r\n\t\tturquoise: '#40e0d0',\r\n\t\tviolet: '#ee82ee',\r\n\t\twheat: '#f5deb3',\r\n\t\t// white: '#ffffff',\r\n\t\twhitesmoke: '#f5f5f5',\r\n\t\t// yellow: '#ffff00',\r\n\t\tyellowgreen: '#9acd32'\r\n\t};\r\n\r\nSVGParser.prototype.parseColor = function(value, opacity, styles){\r\n\tif (value == 'currentColor') value = styles.color;\r\n\treturn parseColor.call(this, namedColors[value] || value, opacity, styles);\r\n};","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/core.js":"var Class = require('../../core/class');\r\nvar Color = require('../../core/color');\r\nvar Mode = require('../../modes/current');\r\nvar Rectangle = require('../../shapes/rectangle');\r\n\r\n// Regular Expressions\r\n\r\nvar matchURL = /^\\s*url\\([\"'\\s]*([^\\)]*?)[\"'\\s]*\\)/,\r\n\trequiredNumber = '(?:\\\\s+|\\\\s*,\\\\s*)([^\\\\s,\\\\)]+)';\r\n\tnumber = '(?:' + requiredNumber + ')?',\r\n\tmatchViewBox = new RegExp('^\\\\s*([^\\\\s,]+)' + requiredNumber + requiredNumber + requiredNumber),\r\n\tmatchUnit = /^\\s*([\\+\\-\\d\\.]+(?:e\\d+)?)(|px|em|ex|in|pt|pc|mm|cm|%)\\s*$/i;\r\n\r\n// Environment Settings\r\nvar dpi = 72, emToEx = 0.5;\r\n\r\nvar styleSheet = function(){},\r\n\tdefaultStyles = {\r\n\t\t'viewportWidth': 500,\r\n\t\t'viewportHeight': 500,\r\n\t\t'font-family': 'Arial',\r\n\t\t'font-size': 12,\r\n\t\t'color': 'black',\r\n\t\t'fill': 'black'\r\n\t},\r\n\tnonInheritedStyles = {\r\n\t\t'stop-color': 'black',\r\n\t\t'stop-opacity': 1,\r\n\t\t'clip-path': null,\r\n\t\t'filter': null,\r\n\t\t'mask': null,\r\n\t\t'opacity': 1,\r\n\t\t'cursor': null\r\n\t};\r\n\r\n// Visitor\r\n\r\nvar SVGParser = Class({\r\n\r\n\tinitialize: function(mode){\r\n\t\tthis.MODE = mode;\r\n\t},\r\n\r\n\t// TODO Fix this silly API\r\n\tparseAsSurface: function(element, styles){\r\n\t\treturn this.parse(element, styles, true);\r\n\t},\r\n\r\n\tparse: function(element, styles, asSurface){\r\n\t\tif (typeof element == 'string') element = this.parseXML(element);\r\n\r\n\t\tif (!styles)\r\n\t\t\tstyles = this.findStyles(element);\r\n\t\telse\r\n\t\t\tfor (var style in defaultStyles)\r\n\t\t\t\tif (!(style in styles))\r\n\t\t\t\t\tstyles[style] = defaultStyles[style];\r\n\r\n\t\tif (element.documentElement || asSurface){\r\n\t\t\telement = element.documentElement || element;\r\n\t\t\tvar canvas = new this.MODE.Surface(\r\n\t\t\t\tthis.parseLength(element.getAttribute('width') || '100%', styles, 'x'),\r\n\t\t\t\tthis.parseLength(element.getAttribute('height') || '100%', styles, 'y')\r\n\t\t\t);\r\n\t\t\tif (element.getAttribute('viewBox'))\r\n\t\t\t\tcanvas.grab(this.parse(element, styles));\r\n\t\t\telse\r\n\t\t\t\tthis.container(element, this.parseStyles(element, styles), canvas);\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t\tif (element.nodeType != 1 || element.getAttribute('requiredExtensions') || element.getAttribute('systemLanguage') != null) return null;\r\n\t\tstyles = this.parseStyles(element, styles);\r\n\t\tvar parseFunction = this[element.nodeName + 'Element'];\r\n\t\treturn parseFunction ? parseFunction.call(this, element, styles) : null;\r\n\t},\r\n\t\r\n\tparseXML: window.DOMParser ? function(text){\r\n\t\treturn new DOMParser().parseFromString(text, 'text/xml');\r\n\t} : function(text){\r\n\t\ttry {\r\n\t\t\tvar xml;\r\n\t\t\ttry { xml = new ActiveXObject('MSXML2.DOMDocument'); }\r\n\t\t\tcatch (e){ xml = new ActiveXObject('Microsoft.XMLDOM'); }\r\n\t\t\txml.resolveExternals = false;\r\n\t\t\txml.validateOnParse = false;\r\n\t\t\txml.async = false;\r\n\t\t\txml.preserveWhiteSpace = true;\r\n\t\t\txml.loadXML(text);\r\n\t\t\treturn xml;\r\n\t\t} catch (e){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\t\r\n\tparseStyles: function(element, styles){\r\n\t\tstyleSheet.prototype = styles;\r\n\t\tvar newSheet = new styleSheet();\r\n\t\tfor (var key in nonInheritedStyles) newSheet[key] = nonInheritedStyles[key];\r\n\t\tthis.applyStyles(element, newSheet);\r\n\t\tif (newSheet.hasOwnProperty('font-size')){\r\n\t\t\tvar newFontSize = this.parseLength(newSheet['font-size'], styles, 'font');\r\n\t\t\tif (newFontSize != null) newSheet['font-size'] = newFontSize;\r\n\t\t}\r\n\t\tif (newSheet.hasOwnProperty('text-decoration')){\r\n\t\t\tnewSheet['text-decoration-color'] = newSheet.color;\r\n\t\t}\r\n\t\treturn newSheet;\r\n\t},\r\n\t\r\n\tfindStyles: function(element){\r\n\t\tif (!element || element.nodeType != 1) return defaultStyles;\r\n\t\tvar styles = this.findStyles(element.parentNode);\r\n\t\treturn this.parseStyles(element, styles);\r\n\t},\r\n\t\r\n\tapplyStyles: function(element, target){\r\n\t\tvar attributes = element.attributes;\r\n\t\tfor (var i = 0, l = attributes.length; i < l; i++){\r\n\t\t\tvar attribute = attributes[i],\r\n\t\t\t    name = attribute.nodeName,\r\n\t\t\t    value = attribute.nodeValue;\r\n\t\t\tif (value != 'inherit'){\r\n\t\t\t\ttarget[name] = value;\r\n\t\t\t\tif (name == 'fill') target['fill_document'] = element.ownerDocument;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t},\r\n\r\n\tfindById: function(document, id){\r\n\t\t// if (document.getElementById) return document.getElementById(id); Not reliable\r\n\t\tif (this.cacheDocument != document){\r\n\t\t\tthis.ids = {};\r\n\t\t\tthis.lastSweep = null;\r\n\t\t\tthis.cacheDocument = document;\r\n\t\t}\r\n\t\tvar ids = this.ids;\r\n\t\tif (ids[id] != null) return ids[id];\r\n\t\tvar root = document.documentElement, node = this.lastSweep || root;\r\n\t\ttreewalker: while (node){\r\n\t\t\tif (node.nodeType == 1){\r\n\t\t\t\tvar newID = node.getAttribute('id') || node.getAttribute('xml:id');\r\n\t\t\t\tif (newID && ids[newID] == null) ids[newID] = node;\r\n\t\t\t\tif (newID == id){\r\n\t\t\t\t\tthis.lastSweep = node;\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (node.firstChild){\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t} else {\r\n\t\t\t\twhile (!node.nextSibling){\r\n\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\tif (!node || node == root) break treewalker;\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\tfindByURL: function(document, url, callback){\r\n\t\tcallback.call(this, url && url[0] == '#' ? this.findById(document, url.substr(1)) : null);\r\n\t},\r\n\r\n\tresolveURL: function(url){\r\n\t\treturn url;\r\n\t},\r\n\t\r\n\tparseLength: function(value, styles, dimension){\r\n\t\tvar match = matchUnit.exec(value);\r\n\t\tif (!match) return null;\r\n\t\tvar result = parseFloat(match[1]);\r\n\t\tswitch(match[2]){\r\n\t\t\tcase '': case 'px': return result;\r\n\t\t\tcase 'em': return result * styles['font-size'];\r\n\t\t\tcase 'ex': return result * styles['font-size'] * emToEx;\r\n\t\t\tcase 'in': return result * dpi;\r\n\t\t\tcase 'pt': return result * dpi / 72;\r\n\t\t\tcase 'pc': return result * dpi / 6;\r\n\t\t\tcase 'mm': return result * dpi / 25.4;\r\n\t\t\tcase 'cm': return result * dpi / 2.54;\r\n\t\t\tcase '%':\r\n\t\t\t\tvar w = styles.viewportWidth, h = styles.viewportHeight;\r\n\t\t\t\tif (dimension == 'font') return result * styles['font-size'] / 100;\r\n\t\t\t\tif (dimension == 'x') return result * w / 100;\r\n\t\t\t\tif (dimension == 'y') return result * h / 100;\r\n\t\t\t\treturn result * Math.sqrt(w * w + h * h) / Math.sqrt(2) / 100;\r\n\t\t}\r\n\t},\r\n\t\r\n\tparseColor: function(value, opacity, styles){\r\n\t\tif (value == 'currentColor') value = styles.color;\r\n\t\ttry {\r\n\t\t\tvar color = new Color(value);\r\n\t\t} catch (x){\r\n\t\t\t// Ignore unparsable colors, TODO: log\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tcolor.alpha = opacity == null ? 1 : +opacity;\r\n\t\treturn color;\r\n\t},\r\n\t\r\n\tgetLengthAttribute: function(element, styles, attr, dimension){\r\n\t\treturn this.parseLength(element.getAttribute(attr) || 0, styles, dimension);\r\n\t},\r\n\t\r\n\tcontainer: function(element, styles, container){\r\n\t\tif (container.width != null) styles.viewportWidth = container.width;\r\n\t\tif (container.height != null) styles.viewportHeight = container.height;\r\n\t\tthis.filter(styles, container);\r\n\t\tthis.describe(element, styles, container);\r\n\t\tvar node = element.firstChild;\r\n\t\twhile (node){\r\n\t\t\tvar art = this.parse(node, styles);\r\n\t\t\tif (art) container.grab(art);\r\n\t\t\tnode = node.nextSibling;\r\n\t\t}\r\n\t\treturn container;\r\n\t},\r\n\r\n\tshape: function(element, styles, target, x, y){\r\n\t\tthis.transform(element, target);\r\n\t\ttarget.transform(1, 0, 0, 1, x, y);\r\n\t\tthis.fill(styles, target, x, y);\r\n\t\tthis.stroke(styles, target);\r\n\t\tthis.filter(styles, target);\r\n\t\tif (styles.visibility == 'hidden') target.hide();\r\n\t\tthis.describe(element, styles, target);\r\n\t\treturn target;\r\n\t},\r\n\t\r\n\tfill: function(styles, target, x, y){\r\n\t\tif (!styles.fill || styles.fill == 'none') return;\r\n\t\tvar match;\r\n\t\tif (match = matchURL.exec(styles.fill)){\r\n\t\t\tthis.findByURL(styles.fill_document, match[1], function(fill){\r\n\t\t\t\tvar fillFunction = fill && this[fill.nodeName + 'Fill'];\r\n\t\t\t\tif (fillFunction) fillFunction.call(this, fill, this.findStyles(fill), target, x, y);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttarget.fill(this.parseColor(styles.fill, styles['fill-opacity'], styles));\r\n\t\t}\r\n\t},\r\n\t\r\n\tstroke: function(styles, target){\r\n\t\tif (!styles.stroke || styles.stroke == 'none' || matchURL.test(styles.stroke)) return; // Advanced stroke colors are not supported, TODO: log\r\n\t\tvar color = this.parseColor(styles.stroke, styles['stroke-opacity'], styles),\r\n\t\t\twidth = this.parseLength(styles['stroke-width'], styles),\r\n\t\t\tcap = styles['stroke-linecap'] || 'butt',\r\n\t\t\tjoin = styles['stroke-linejoin'] || 'miter';\r\n\t\ttarget.stroke(color, width == null ? 1 : width, cap, join);\r\n\t},\r\n\r\n\tfilter: function(styles, target){\r\n\t\tif (styles.opacity != 1 && target.blend) target.blend(styles.opacity);\r\n\t\tif (styles.display == 'none') target.hide();\r\n\t},\r\n\t\r\n\tdescribe: function(element, styles, target){\r\n\t\tvar node = element.firstChild, title = '';\r\n\t\tif (element.nodeName != 'svg')\r\n\t\t\twhile (node){\r\n\t\t\t\tif (node.nodeName == 'title') title += node.firstChild && node.firstChild.nodeValue;\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\tif (styles.cursor || title) target.indicate(styles.cursor, title);\r\n\t},\r\n\r\n\ttransform: function(element, target){\r\n\t\tvar transform = element.getAttribute('transform'), match;\r\n\t\tvar matchTransform = new RegExp('([a-z]+)\\\\s*\\\\(\\\\s*([^\\\\s,\\\\)]+)' + number + number + number + number + number + '\\\\s*\\\\)', 'gi');\r\n\t\twhile(match = transform && matchTransform.exec(transform)){\r\n\t\t\tswitch(match[1]){\r\n\t\t\t\tcase 'matrix':\r\n\t\t\t\t\ttarget.transform(match[2], match[3], match[4], match[5], match[6], match[7]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'translate':\r\n\t\t\t\t\ttarget.transform(1, 0, 0, 1, match[2], match[3]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'scale':\r\n\t\t\t\t\ttarget.transform(match[2], 0, 0, match[3] || match[2]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rotate':\r\n\t\t\t\t\tvar rad = match[2] * Math.PI / 180, cos = Math.cos(rad), sin = Math.sin(rad);\r\n\t\t\t\t\ttarget.transform(1, 0, 0, 1, match[3], match[4])\r\n\t\t\t\t\t\t.transform(cos, sin, -sin, cos)\r\n\t\t\t\t\t\t.transform(1, 0, 0, 1, -match[3], -match[4]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skewX':\r\n\t\t\t\t\ttarget.transform(1, 0, Math.tan(match[2] * Math.PI / 180), 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skewY':\r\n\t\t\t\t\ttarget.transform(1, Math.tan(match[2] * Math.PI / 180), 0, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tsvgElement: function(element, styles){\r\n\t\tvar viewbox = element.getAttribute('viewBox'),\r\n\t\t    match = matchViewBox.exec(viewbox),\r\n\t\t    x = this.getLengthAttribute(element, styles, 'x', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'y', 'y'),\r\n\t\t    width = this.getLengthAttribute(element, styles, 'width', 'x'),\r\n\t\t    height = this.getLengthAttribute(element, styles, 'height', 'y'),\r\n\t\t    group = match ? new this.MODE.Group(+match[3], +match[4]) : new this.MODE.Group(width || null, height || null);\r\n\t\tif (width && height) group.resizeTo(width, height); // TODO: Aspect ratio\r\n\t\tif (match) group.transform(1, 0, 0, 1, -match[1], -match[2]);\r\n\t\tthis.container(element, styles, group);\r\n\t\tgroup.move(x, y);\r\n\t\treturn group;\r\n\t},\r\n\t\r\n\tgElement: function(element, styles){\r\n\t\tvar group = new this.MODE.Group();\r\n\t\tthis.transform(element, group);\r\n\t\tthis.container(element, styles, group);\r\n\t\treturn group;\r\n\t},\r\n\t\r\n\tuseElement: function(element, styles){\r\n\t\tvar placeholder = new this.MODE.Group(),\r\n\t\t    x = this.getLengthAttribute(element, styles, 'x', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'y', 'y'),\r\n\t\t    width = this.getLengthAttribute(element, styles, 'width', 'x'),\r\n\t\t    height = this.getLengthAttribute(element, styles, 'height', 'y');\r\n\t\t\r\n\t\tthis.transform(element, placeholder);\r\n\t\tplaceholder.transform(1, 0, 0, 1, x, y);\r\n\t\t\r\n\t\tthis.findByURL(element.ownerDocument, element.getAttribute('xlink:href') || element.getAttribute('href'), function(target){\r\n\t\t\tif (!target || target.nodeType != 1) return;\r\n\t\t\t\r\n\t\t\tvar parseFunction = target.nodeName == 'symbol' ? this.svgElement : this[target.nodeName + 'Element'];\r\n\t\t\tif (!parseFunction) return;\r\n\t\t\t\r\n\t\t\tstyles = this.parseStyles(element, this.parseStyles(target, styles));\r\n\t\t\t\r\n\t\t\tvar symbol = parseFunction.call(this, target, styles);\r\n\t\t\tif (!symbol) return;\r\n\t\t\tif (width && height) symbol.resizeTo(width, height); // TODO: Aspect ratio, maybe resize the placeholder instead\r\n\t\t\tplaceholder.grab(symbol);\r\n\t\t});\r\n\t\t\r\n\t\treturn placeholder;\r\n\t},\r\n\t\r\n\tswitchElement: function(element, styles){\r\n\t\tvar node = element.firstChild;\r\n\t\twhile (node){\r\n\t\t\tvar art = this.parse(node, styles);\r\n\t\t\tif (art) return art;\r\n\t\t\tnode = node.nextSibling;\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\t\r\n\taElement: function(element, styles){\r\n\t\t// For now treat it like a group\r\n\t\treturn this.gElement(element, styles);\r\n\t},\r\n\t\r\n\tpathElement: function(element, styles){\r\n\t\tvar shape = new this.MODE.Shape(element.getAttribute('d') || null);\r\n\t\tthis.shape(element, styles, shape);\r\n\t\treturn shape;\r\n\t},\r\n\t\r\n\timageElement: function(element, styles){\r\n\t\tvar href = this.resolveURL(element.getAttribute('xlink:href') || element.getAttribute('href')),\r\n\t\t    width = this.getLengthAttribute(element, styles, 'width', 'x'),\r\n\t\t    height = this.getLengthAttribute(element, styles, 'height', 'y'),\r\n\t\t    x = this.getLengthAttribute(element, styles, 'x', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'y', 'y'),\r\n\t\t    clipPath = element.getAttribute('clip-path'),\r\n\t\t    image,\r\n\t\t    match;\r\n\t\t\r\n\t\tif (clipPath && (match = matchURL.exec(clipPath)) && match[1][0] == '#'){\r\n\t\t\tvar clip = this.findById(element.ownerDocument, match[1].substr(1));\r\n\t\t\tif (clip){\r\n\t\t\t\timage = this.switchElement(clip, styles);\r\n\t\t\t\tif (image){\r\n\t\t\t\t\tif (typeof image.fillImage == 'function'){\r\n\t\t\t\t\t\timage.fillImage(href, width, height);\r\n\t\t\t\t\t\tif (image.stroke) image.stroke(0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\timage = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!image){\r\n\t\t\t//image = new Image(href, width, height); TODO\r\n\t\t\timage = new Rectangle(width, height).fillImage(href, width, height);\r\n\t\t}\r\n\t\tthis.filter(styles, image);\r\n\t\tif (styles.visibility == 'hidden') target.hide();\r\n\t\tthis.describe(element, styles, image);\r\n\t\tthis.transform(element, image);\r\n\t\timage.transform(1, 0, 0, 1, x, y);\r\n\t\treturn image;\r\n\t}\r\n\r\n});\r\n\r\nSVGParser.parse = function(element, styles){\r\n\treturn new SVGParser(Mode).parse(element, styles);\r\n};\r\n\r\nSVGParser.implement = function(obj){\r\n\tfor (var key in obj)\r\n\t\tthis.prototype[key] = obj[key];\r\n};\r\n\r\nmodule.exports = SVGParser;","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/fonts.js":"var Class = require('../../core/class');\r\nvar Path = require('../../core/path');\r\nvar SVGParser = require('./core');\r\nvar Font = require('../../shapes/font');\r\n\r\nvar parse = SVGParser.prototype.parse;\r\n\r\nvar matchFontURL = /url\\(['\"\\s]*([^\\)]*?)['\"\\s]*\\)\\s+format\\(['\"]?svg['\"]?\\)/i;\r\n\r\nvar trimFontFamily = /^['\"\\s]+|['\"\\s]+$|,.*$/g;\r\n\r\nvar fillFaceAttributes = function(element, face){\r\n\tvar attributes = element.attributes;\r\n\tfor (var i = 0, l = attributes.length; i < l; i++){\r\n\t\tvar attribute = attributes[i];\r\n\t\tif (!(attribute.nodeName in face)){\r\n\t\t\tface[attribute.nodeName] = attribute.nodeValue;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nSVGParser.implement({\r\n\r\n\tparse: function(element, styles){\r\n\t\tif (element.documentElement && element != this.fontDocument){\r\n\t\t\tthis.fontDocument = element;\r\n\t\t\tthis.findFonts(element);\r\n\t\t}\r\n\t\treturn parse.apply(this, arguments);\r\n\t},\r\n\t\r\n\tfindFonts: function(document){\r\n\t\tvar fonts = this.fonts || (this.fonts = {});\r\n\t\tvar root = document.documentElement, node = root;\r\n\t\ttreewalker: while (node){\r\n\t\t\tif (node.nodeType == 1 && node.nodeName == 'font-face'){\r\n\t\t\t\tthis.fontFace(node);\r\n\t\t\t}\r\n\t\t\tif (node.firstChild){\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t} else {\r\n\t\t\t\twhile (!node.nextSibling){\r\n\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\tif (!node || node == root) break treewalker;\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.nextSibling;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.findCSS){\r\n\t\t\tvar rules = this.findCSS(document).cssRules;\r\n\t\t\tfor (var i = 0, l = rules.length; i < l; i++){\r\n\t\t\t\tvar rule = rules[i];\r\n\t\t\t\tif (rule.fontFace){\r\n\t\t\t\t\tvar url = matchFontURL.exec(rule.style.src);\r\n\t\t\t\t\tif (url) this.fontURL(document, url[1], rule.style);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\tfontFace: function(element){\r\n\t\tvar face = {};\r\n\t\tfillFaceAttributes(element, face);\r\n\t\tif (element.parentNode.nodeName == 'font') this.font(element.parentNode, face);\r\n\t\tvar node = element.firstChild;\r\n\t\twhile (node){\r\n\t\t\tif (node.nodeName == 'font-face-src'){\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (node.nodeName == 'font-face-uri'){\r\n\t\t\t\tvar url = node.getAttribute('xlink:href');\r\n\t\t\t\tthis.fontURL(element.ownerDocument, url, face);\r\n\t\t\t}\r\n\t\t\tnode = node.nextSibling;\r\n\t\t}\r\n\t},\r\n\t\r\n\tfontURL: function(document, url, face){\r\n\t\tif (!face['font-family']) return;\r\n\t\tvar pendingFonts = this.pendingFonts || (this.pendingFonts = {});\r\n\t\tvar family = face['font-family'].replace(trimFontFamily, '');\r\n\t\tvar callbacks = pendingFonts[family] = [];\r\n\t\tthis.findByURL(document, url, function(font){\r\n\t\t\tdelete pendingFonts[family];\r\n\t\t\tif (font){\r\n\t\t\t\tvar f = this.font(font, face);\r\n\t\t\t\tfor (var i = 0, l = callbacks.length; i < l; i++)\r\n\t\t\t\t\tcallbacks[i].call(this, f);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t\r\n\tfindFont: function(styles, callback){\r\n\t\tvar family = styles['font-family'].replace(trimFontFamily, '');\r\n\t\tvar callbacks = this.pendingFonts && this.pendingFonts[family];\r\n\t\tif (callbacks){\r\n\t\t\tcallbacks.push(callback);\r\n\t\t} else if (this.fonts){\r\n\t\t\tcallback.call(this, this.fonts[family]);\r\n\t\t} else {\r\n\t\t\tcallback.call(this, null);\r\n\t\t}\r\n\t},\r\n\t\r\n\tfont: function(element, face){\r\n\t\tvar glyphs = {}, font = { face: face, glyphs: glyphs };\r\n\r\n\t\tvar w = element.getAttribute('horiz-adv-x');\r\n\t\tif (w) font.w = parseInt(w, 10);\r\n\t\t\r\n\t\tvar node = element.firstChild;\r\n\t\twhile (node){\r\n\t\t\tswitch(node.nodeName){\r\n\t\t\t\tcase 'font-face':\r\n\t\t\t\t\tfillFaceAttributes(node, face);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'missing-glyph':\r\n\t\t\t\tcase 'glyph':\r\n\t\t\t\t\tvar glyph = {},\r\n\t\t\t\t\t\tcode = node.nodeName == 'missing-glyph' ? 'missing' : node.getAttribute('unicode'),\r\n\t\t\t\t\t\tw = node.getAttribute('horiz-adv-x'),\r\n\t\t\t\t\t\td = node.getAttribute('d');\r\n\t\t\t\t\tif (!code) break;\r\n\t\t\t\t\tif (w) glyph.w = parseInt(w, 10);\r\n\r\n\t\t\t\t\tif (d){\r\n\t\t\t\t\t\t// Flip path\r\n\t\t\t\t\t\tvar path = new FlippedVMLPathAtNormalPrecision(d);\r\n\t\t\t\t\t\tglyph.d = path.toVML().substr(1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tglyphs[code] = glyph;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// TODO: Kerning\r\n\t\t\t}\r\n\t\t\tnode = node.nextSibling;\r\n\t\t}\r\n\t\t\r\n\t\tvar units = face['units-per-em'];\r\n\t\t\r\n\t\tif (isNaN(units)) face['units-per-em'] = units = 1000;\r\n\r\n\t\tif (face.ascent == null) face.ascent = face.descent == null ? 0.8 * units : units - face.descent;\r\n\t\tif (face.descent == null) face.descent = face.ascent - units;\r\n\t\t\r\n\t\tvar family = face['font-family'];\r\n\t\tif (!family) return;\r\n\t\tface['font-family'] = family = family.replace(trimFontFamily, '');\r\n\r\n\t\tvar fonts = this.fonts || (this.fonts = {});\r\n\t\tif (face.ascent) face.ascent = +face.ascent;\r\n\t\tif (face.descent) face.descent = +face.descent;\r\n\t\tfonts[family] = font;\r\n\t\tif (this.MODE.Font)\r\n\t\t\tthis.MODE.Font.register(font);\r\n\t\telse\r\n\t\t\tFont.register(font);\r\n\t\treturn font;\r\n\t}\r\n\r\n});\r\n\r\nvar round = Math.round;\r\n\r\nvar FlippedVMLPathAtNormalPrecision = Class(Path, {\r\n\r\n\tinitialize: function(path){\r\n\t\tthis.reset();\r\n\t\tif (path){\r\n\t\t\tthis.push(path);\r\n\t\t}\r\n\t},\r\n\r\n\tonReset: function(){\r\n\t\tthis.path = [];\r\n\t},\r\n\r\n\tonMove: function(sx, sy, x, y){\r\n\t\tthis.path.push('m', round(x), -round(y));\r\n\t},\r\n\r\n\tonLine: function(sx, sy, x, y){\r\n\t\tthis.path.push('l', round(x), -round(y));\r\n\t},\r\n\r\n\tonBezierCurve: function(sx, sy, p1x, p1y, p2x, p2y, x, y){\r\n\t\tthis.path.push('c',\r\n\t\t\tround(p1x), -round(p1y),\r\n\t\t\tround(p2x), -round(p2y),\r\n\t\t\tround(x), -round(y)\r\n\t\t);\r\n\t},\r\n\r\n\tonClose: function(){\r\n\t\tthis.path.push('x');\r\n\t},\r\n\r\n\ttoVML: function(){\r\n\t\treturn this.path.join(' ');\r\n\t}\r\n\r\n});\r\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/markers.js":"var SVGParser = require('./core');\r\n\r\nSVGParser.prototype.markerElement = function(){\r\n\t// TODO\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/paints.js":"var SVGParser = require('./core');\r\n\r\nSVGParser.implement({\r\n\r\n\tfindLinkedAttributes: function(element, callback){\r\n\t\tvar self = this;\r\n\r\n\t\tvar cb = function(result){\r\n\t\t\tvar attributes = element.attributes;\r\n\t\t\tfor (var i = 0, l = attributes.length; i < l; i++){\r\n\t\t\t\tvar attribute = attributes[i];\r\n\t\t\t\tresult[attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t\tif (element.childNodes.length > 0) result.container = element;\r\n\t\t\tcallback.call(self, result);\r\n\t\t};\r\n\t\t\r\n\t\tvar href = element.getAttribute('xlink:href') || element.getAttribute('href');\r\n\t\tif (!href){ cb.call(this, {}); return; }\r\n\t\t\r\n\t\tthis.findByURL(element.ownerDocument, href, function(parent){\r\n\t\t\tif (!parent) cb.call(this, {});\r\n\t\t\telse this.findLinkedAttributes(parent, function(parentResult){\r\n\t\t\t\tcb.call(this, parentResult);\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\tgetBBox: function(graphic){\r\n\t\tvar path = graphic.getPath && graphic.getPath();\r\n\t\treturn path ? path.measure() : graphic;\r\n\t},\r\n\t\r\n\tparseBBLength: function(value, bbox, dimension){\r\n\t\tvalue = /%/.test(value) ? parseFloat(value) / 100 : parseFloat(value);\r\n\t\tif (dimension == 'x') return (bbox.left || 0) + (bbox.width || 0) * value;\r\n\t\tif (dimension == 'y') return (bbox.top || 0) + (bbox.height || 0) * value;\r\n\t},\r\n\r\n\tgetGradientStops: function(element, styles){\r\n\t\tvar stops = null, node = element.firstChild;\r\n\t\twhile (node){\r\n\t\t\tif (node.nodeName == 'stop'){\r\n\t\t\t\tvar stopStyles = this.parseStyles(node, styles);\r\n\t\t\t\tvar color = this.parseColor(stopStyles['stop-color'] || 'black', stopStyles['stop-opacity'], stopStyles),\r\n\t\t\t\t    offset = node.getAttribute('offset');\r\n\t\t\t\tif (color && offset){\r\n\t\t\t\t\toffset = /%/.test(offset) ? parseFloat(offset) / 100 : parseFloat(offset);\r\n\t\t\t\t\tif (offset < 0) offset = 0;\r\n\t\t\t\t\tif (offset > 1) offset = 1;\r\n\t\t\t\t\tif (!stops) stops = {};\r\n\t\t\t\t\tstops[offset.toFixed(4)] = color;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnode = node.nextSibling;\r\n\t\t}\r\n\t\treturn stops;\r\n\t},\r\n\t\r\n\tradialGradientFill: function(element, styles, target, x, y){\r\n\t\tthis.findLinkedAttributes(element, function(attrs){\r\n\t\t\tif (!attrs.container) return;\r\n\t\t\t\r\n\t\t\tvar stops = this.getGradientStops(attrs.container, styles);\r\n\t\t\tif (!stops) return;\r\n\t\t\t\r\n\t\t\t// TODO: Transform\r\n\t\t\t\r\n\t\t\tvar cx = attrs.cx || '50%',\r\n\t\t\t    cy = attrs.cy || '50%',\r\n\t\t\t    rx = attrs.r || '50%', ry,\r\n\t\t\t    fx = attrs.fx || cx,\r\n\t\t\t    fy = attrs.fy || cy;\r\n\t\t\t\r\n\t\t\tif (attrs['gradientUnits'] == 'userSpaceOnUse'){\r\n\t\t\t\tcx = this.parseLength(cx, styles, 'x') - x;\r\n\t\t\t\tcy = this.parseLength(cy, styles, 'y') - y;\r\n\t\t\t\trx = ry = this.parseLength(rx, styles);\r\n\t\t\t\tfx = this.parseLength(fx, styles, 'x') - x;\r\n\t\t\t\tfy = this.parseLength(fy, styles, 'y') - y;\r\n\t\t\t} else {\r\n\t\t\t\tvar bb = this.getBBox(target);\r\n\t\t\t\tcx = this.parseBBLength(cx, bb, 'x');\r\n\t\t\t\tcy = this.parseBBLength(cy, bb, 'y');\r\n\t\t\t\trx = this.parseBBLength(rx, bb, 'x');\r\n\t\t\t\try = rx * (bb.height / bb.width);\r\n\t\t\t\tfx = this.parseBBLength(fx, bb, 'x');\r\n\t\t\t\tfy = this.parseBBLength(fy, bb, 'y');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttarget.fillRadial(stops, fx, fy, rx, ry, cx, cy);\r\n\t\t\r\n\t\t});\r\n\t},\r\n\r\n\tlinearGradientFill: function(element, styles, target, x, y){\r\n\t\tthis.findLinkedAttributes(element, function(attrs){\r\n\t\t\tif (!attrs.container) return;\r\n\r\n\t\t\tvar stops = this.getGradientStops(attrs.container, styles);\r\n\t\t\tif (!stops) return;\r\n\r\n\t\t\tvar x1 = attrs.x1 || 0,\r\n\t\t\t    y1 = attrs.y1 || 0,\r\n\t\t\t    x2 = attrs.x2 || '100%',\r\n\t\t\t    y2 = attrs.y2 || 0;\r\n\t\t\t\r\n\t\t\t// TODO: Transform\r\n\t\t\t\r\n\t\t\tif (attrs['gradientUnits'] == 'userSpaceOnUse'){\r\n\t\t\t\tx1 = this.parseLength(x1, styles, 'x') - x;\r\n\t\t\t\ty1 = this.parseLength(y1, styles, 'y') - y;\r\n\t\t\t\tx2 = this.parseLength(x2, styles, 'x') - x;\r\n\t\t\t\ty2 = this.parseLength(y2, styles, 'y') - y;\r\n\t\t\t} else {\r\n\t\t\t\tx1 = /%/.test(x1) ? parseFloat(x1) / 100 : parseFloat(x1);\r\n\t\t\t\ty1 = /%/.test(y1) ? parseFloat(y1) / 100 : parseFloat(y1);\r\n\t\t\t\tx2 = /%/.test(x2) ? parseFloat(x2) / 100 : parseFloat(x2);\r\n\t\t\t\ty2 = /%/.test(y2) ? parseFloat(y2) / 100 : parseFloat(y2);\r\n\t\t\t\t\r\n\t\t\t\t// If both points are close to the opposite edges, use rotation angle instead\r\n\t\t\t\tvar closeToEdge =\r\n\t\t\t\t\t(x1 > -0.01 && x1 < 0.01 && x2 > 0.99 && x2 < 1.01) ||\r\n\t\t\t\t\t(x1 > 0.99 && x1 < 1.01 && x2 > -0.01 && x2 < 0.01) ||\r\n\t\t\t\t    (y1 > -0.01 && y1 < 0.01 && y2 > 0.99 && y2 < 1.01) ||\r\n\t\t\t\t    (y1 > 0.99 && y1 < 1.01 && y2 > -0.01 && y2 < 0.01);\r\n\t\t\t\t\r\n\t\t\t\tif (closeToEdge){\r\n\t\t\t\t\tvar angle = Math.atan2(y1 - y2, x2 - x1) * 180 / Math.PI;\r\n\t\t\t\t\ttarget.fillLinear(stops, angle);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// TODO: Always use rotation angle, but offset stops instead to adjust\r\n\t\t\t\t// TODO2: Never use rotation angle because measuring is deprecated\r\n\t\t\t\tvar bb = this.getBBox(target);\r\n\t\t\t\tx1 = this.parseBBLength(x1, bb, 'x');\r\n\t\t\t\ty1 = this.parseBBLength(y1, bb, 'y');\r\n\t\t\t\tx2 = this.parseBBLength(x2, bb, 'x');\r\n\t\t\t\ty2 = this.parseBBLength(y2, bb, 'y');\r\n\t\t\t}\r\n\t\t\ttarget.fillLinear(stops, x1, y1, x2, y2);\r\n\t\t});\r\n\t},\r\n\t\r\n\tpatternFill: function(element, styles, target, x, y){\r\n\t\t// TODO: If the pattern is an image, fillImage\r\n\t}\r\n\r\n});\r\n","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/shapes.js":"var SVGParser = require('./core');\r\nvar Rectangle = require('../../shapes/rectangle');\r\nvar Ellipse = require('../../shapes/ellipse');\r\n\r\nSVGParser.implement({\r\n\t\r\n\trectElement: function(element, styles){\r\n\t\tvar x = this.getLengthAttribute(element, styles, 'x', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'y', 'y'),\r\n\t\t    w = +this.getLengthAttribute(element, styles, 'width', 'x'),\r\n\t\t    h = +this.getLengthAttribute(element, styles, 'height', 'y'),\r\n\t\t    rx = this.getLengthAttribute(element, styles, 'rx', 'x'),\r\n\t\t    ry = this.getLengthAttribute(element, styles, 'ry', 'y'),\r\n\t\t    shape;\r\n\t\tif (!w || !h) return null;\r\n\t\tif (rx > w / 2) rx = w / 2;\r\n\t\tif (ry > h / 2) ry = h / 2; \r\n\t\tif (rx && ry && rx != ry){\r\n\t\t\tshape = new this.MODE.Shape(\r\n\t\t\t\tnew this.MODE.Path()\r\n\t\t\t\t.move(0, ry)\r\n\t\t\t\t.arc(rx, -ry)\r\n\t\t\t\t.line(w - rx - rx, 0)\r\n\t\t\t\t.arc(rx, ry)\r\n\t\t\t\t.line(0, h - ry - ry)\r\n\t\t\t\t.arc(-rx, ry)\r\n\t\t\t\t.line(-w + rx + rx, 0)\r\n\t\t\t\t.arc(-rx, -ry)\r\n\t\t\t\t.line(0, -h + ry + ry)\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tshape = new Rectangle(w, h, rx || ry);\r\n\t\t}\r\n\t\tthis.shape(element, styles, shape, x, y);\r\n\t\treturn shape;\r\n\t},\r\n\r\n\tcircleElement: function(element, styles){\r\n\t\tvar x = this.getLengthAttribute(element, styles, 'cx', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'cy', 'y'),\r\n\t\t    r = this.getLengthAttribute(element, styles, 'r'),\r\n\t\t    shape = new Ellipse(r * 2, r * 2);\r\n\t\tif (r == 0) return null;\r\n\t\tthis.shape(element, styles, shape, x - r, y - r);\r\n\t\treturn shape;\r\n\t},\r\n\t\r\n\tellipseElement: function(element, styles){\r\n\t\tvar x = this.getLengthAttribute(element, styles, 'cx', 'x'),\r\n\t\t    y = this.getLengthAttribute(element, styles, 'cy', 'y'),\r\n\t\t    rx = this.getLengthAttribute(element, styles, 'rx', 'x'),\r\n\t\t    ry = this.getLengthAttribute(element, styles, 'ry', 'y'),\r\n\t\t    shape = ry != 0 ? new Ellipse(rx * 2, ry * 2) : new this.MODE.Shape();\r\n\t\tif (rx == 0 || ry == 0) return null;\r\n\t\tthis.shape(element, styles, shape, x - rx, y - ry);\r\n\t\treturn shape;\r\n\t},\r\n\t\r\n\tlineElement: function(element, styles){\r\n\t\tvar x1 = this.getLengthAttribute(element, styles, 'x1', 'x'),\r\n\t\t    y1 = this.getLengthAttribute(element, styles, 'y1', 'y'),\r\n\t\t    x2 = this.getLengthAttribute(element, styles, 'x2', 'x'),\r\n\t\t    y2 = this.getLengthAttribute(element, styles, 'y2', 'y'),\r\n\t\t    shape = new this.MODE.Shape(new this.MODE.Path().moveTo(x1, y1).lineTo(x2, y2));\r\n\t\tif (x1 == x2 && y1 == y2) return null;\r\n\t\tthis.shape(element, styles, shape);\r\n\t\treturn shape;\r\n\t},\r\n\t\r\n\tparsePolypath: function(points){\r\n\t\tif (!points) return new this.MODE.Path();\r\n\t\tvar pointMatcher = /([\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+)[\\s\\,]+([\\-+]?(?:[\\d\\.]e[\\-+]?|[^\\s\\-+,a-z])+)/ig,\r\n\t\t    first = true;\r\n\t\treturn new this.MODE.Path(points.replace(pointMatcher, function(match){\r\n\t\t\tif (first){ first = false; return 'M' + match; }\r\n\t\t\treturn 'L' + match;\r\n\t\t}));\r\n\t},\r\n\r\n\tpolygonElement: function(element, styles){\r\n\t\tvar path = this.parsePolypath(element.getAttribute('points')),\r\n\t\t\tshape = new this.MODE.Shape(path.close());\r\n\t\tthis.shape(element, styles, shape);\r\n\t\treturn shape;\r\n\t},\r\n\r\n\tpolylineElement: function(element, styles){\r\n\t\tvar path = this.parsePolypath(element.getAttribute('points')),\r\n\t\t\tshape = new this.MODE.Shape(path);\r\n\t\tthis.shape(element, styles, shape);\r\n\t\treturn shape;\r\n\t}\r\n\r\n});","/home/travis/build/npmtest/node-npmtest-art/node_modules/art/parsers/svg/styles.js":"var SVGParser = require('./core');\r\nvar Slick = require('../../lib/slick/Source/slick').Slick;\r\nvar SheetCascade = require('../../lib/Sheet.Cascade').SheetCascade;\r\n\r\nvar applyStyles = SVGParser.prototype.applyStyles;\r\n\r\nSVGParser.implement({\r\n\r\n\tapplyStyles: function(element, target){\r\n\t\tthis.findCSS(element.ownerDocument).applyStyle(element, target);\r\n\t\tfor (var key in target)\r\n\t\t\tif (target.hasOwnProperty(key) && target[key] == 'inherit')\r\n\t\t\t\tdelete target[key];\r\n\t\tif (target.hasOwnProperty('fill')) target['fill_document'] = element.ownerDocument;\r\n\t\tapplyStyles.call(this, element, target);\r\n\t},\r\n\t\r\n\tfindCSS: function(document){\r\n\t\tif (this.cssDocument != document){\r\n\t\t\tthis.cssDocument = document;\r\n\t\t\tvar css = this.css = new SheetCascade();\r\n\t\t\tvar sheets = Slick.search(document, 'style');\r\n\t\t\tfor (var i = 0, l = sheets.length; i < l; i++){\r\n\t\t\t\tcss.addSheet(sheets[i]);\r\n\t\t\t}\r\n\t\t\treturn css;\r\n\t\t} else {\r\n\t\t\treturn this.css;\r\n\t\t}\r\n\t}\r\n\r\n});\r\n"}